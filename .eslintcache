[{"/home/pranjal/work/packages/simplified-antd/src/index.js":"1","/home/pranjal/work/packages/simplified-antd/src/reportWebVitals.js":"2","/home/pranjal/work/packages/simplified-antd/src/App.js":"3","/home/pranjal/work/packages/simplified-antd/src/components/index.js":"4","/home/pranjal/work/packages/simplified-antd/src/components/form/index.js":"5","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/index.js":"6","/home/pranjal/work/packages/simplified-antd/src/components/form/demo/basicRegistrationForm.js":"7","/home/pranjal/work/packages/simplified-antd/src/components/form/demo/fields.js":"8","/home/pranjal/work/packages/simplified-antd/src/components/birthDate/index.js":"9","/home/pranjal/work/packages/simplified-antd/src/components/searchInput/index.js":"10"},{"size":478,"mtime":1609515481910,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609496380825,"results":"13","hashOfConfig":"12"},{"size":241,"mtime":1609586028192,"results":"14","hashOfConfig":"12"},{"size":156,"mtime":1609584804464,"results":"15","hashOfConfig":"12"},{"size":13512,"mtime":1609587657809,"results":"16","hashOfConfig":"12"},{"size":4151,"mtime":1609584531533,"results":"17","hashOfConfig":"12"},{"size":1503,"mtime":1609588538399,"results":"18","hashOfConfig":"12"},{"size":2672,"mtime":1609588240141,"results":"19","hashOfConfig":"12"},{"size":5476,"mtime":1609588525070,"results":"20","hashOfConfig":"12"},{"size":1470,"mtime":1609584989858,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"q2bqho",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/home/pranjal/work/packages/simplified-antd/src/index.js",[],["46","47"],"/home/pranjal/work/packages/simplified-antd/src/reportWebVitals.js",[],"/home/pranjal/work/packages/simplified-antd/src/App.js",["48","49"],"/home/pranjal/work/packages/simplified-antd/src/components/index.js",[],"/home/pranjal/work/packages/simplified-antd/src/components/form/index.js",["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"import React, { useState } from 'react';\nimport { Layout, Menu, Breadcrumb, Divider } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Checkbox, Row, Col, Upload, Radio, Select, DatePicker } from 'antd';\nimport validateFields, { FormProps } from 'antd/lib/form'\nimport DynamicFieldSet from '../dynamicField';\n// import { gutter, calculateSpan } from '../commonImports/responsiveSettings';\n// import PhoneInput from 'react-phone-input-2'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'YYYY/MM/DD';\n\n// direction - optional \n// columns - optional\n\n\nconst tailLayout = {\n  wrapperCol: { offset: 20, span: 4 },\n};\n\n\nconst onFinish = (values, props) => {\n  // console.log('Success:', values);\n  if (props.setFormValues && props.handleSubmit) {\n\n    props.setFormValues(values)\n    props.handleSubmit(values)\n  }\n};\n\nconst onFinishFailed = (errorInfo, props) => {\n  console.log('Failed:', errorInfo);\n  if (props.handleError) {\n    props.handleError(errorInfo)\n  }\n};\n\n// const fields = [\n//   {\n//     type:'input',\n//     label: 'Username',\n//     name:'username',\n//     required:true,\n//     message:'Please input username',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'input',\n//     label: 'Email',\n//     name:'userEmail',\n//     required:true,\n//     message:'Please input email',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'password',\n//     label: 'Password',\n//     name:'password',\n//     required:true,\n//     message:'Please input password',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'input',\n//     label: 'Username',\n//     name:'username',\n//     required:false,\n//     message:'Please input username',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'upload',\n//     label: 'Photo Upload',\n//     name:'userPhoto',\n//     required:true,\n//     message:'Please input email',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'checkbox',\n//     label: 'Remember Me',\n//     name:'remember',\n//     required:false,\n//     message:'Please input password',\n//     custValidation:[{\n\n//     }]\n//   }\n// ]\n\n// const initialValues = {\n//   password:'password',\n//   userEmail:'abc@gmail.com',\n//   remember:true\n// }\n\nconst callCustValidation = (form) => {\n  form.validateFields()\n    .then((values) => {\n      console.log(values)\n    })\n    .catch((errorInfo) => {\n      console.log(errorInfo)\n      /*\n      errorInfo:\n        {\n          values: {\n            username: 'username',\n            password: 'password',\n          },\n          errorFields: [\n            { password: ['username'], errors: ['Please input your Password!'] },\n          ],\n          outOfDate: false,\n        }\n      */\n    });\n}\n\n\n\nconst CustomForm = (props) => {\n  const [form] = Form.useForm();\n\n  const [uploadList, setuploadList] = useState(props.photoArr ? props.photoArr : [])\n\n\n  // validateFields(props)\n  let span = 24;\n  // console.log(form)\n  if (props.columns && props.columns == 2) {\n    span = 12\n  }\n\n  if (props.columns && props.columns == 3) {\n    span = 8\n  }\n\n  if (props.columns && props.columns == 4) {\n    span = 6\n  }\n\n\n  let layout = props.layout ? props.layout : {\n    labelCol: { span: 24 },\n    wrapperCol: { span: 24 },\n  };\n\n  if (props.direction && props.direction == 'HORIZONTAL') {\n    layout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 18 },\n    };\n  }\n\n  const uploadButton = (\n    <div>\n      {/* {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />} */}\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  );\n\n\n  const uploadButtonPicture = (a) => (\n    <Button disabled={a}>\n      <UploadOutlined /> Upload\n    </Button>\n  )\n\n  const handleUploadChange = (file) => {\n    // console.log(file)\n    setuploadList(file.fileList)\n  }\n  const onFeildChange = (val, type) => {\n    // console.log('props.....',props)\n    if (props.onChangeMob) {\n      props.onChangeMob(val, type)\n    }\n  }\n\n  return (\n    //   <Form\n    //     {...layout}\n    //     name=\"basic\"\n    //     initialValues={props.initialValues}\n    //     onFinish={(values)=>{\n    //       onFinish(values,props)}}\n    //     onFinishFailed={(errorInfo)=>{\n    //       onFinishFailed(errorInfo, props)}}\n    // >\n    <>\n      <Row gutter={32}>\n        {/* <div style={{display:'flex',flexDirection:'column', flexWrap:'wrap', justifyContent:'space-between'}}> */}\n        {props.fields && props.fields.map((p) => {\n          // console.log('phjgjh',p)\n          let style = { width: '100%' }\n          if (p.width) {\n            style.width = p.width\n          }\n          let elemType = p.type;\n          let elem = <Input disabled={props.disabled ? props.disabled : false} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n          if (p.prefix) {\n            elem = <Input disabled={props.disabled ? props.disabled : false} addonBefore={p.prefix} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n          }\n\n\n          switch (elemType) {\n            case 'checkbox':\n              elem = (\n                p.values ? (<Checkbox.Group>\n                { p.values.map((m) => {\n                  return (\n                    <Checkbox value={m}>{m}</Checkbox>\n                  )\n                }) \n                }\n\n              </Checkbox.Group>)\n              :\n\n              <Checkbox value={p.name}>{p.option != undefined ? p.option : p.label}</Checkbox>\n              )\n              break;\n\n            case 'password':\n              elem = (<Input.Password placeholder={p.name} />)\n              break;\n\n            case 'mobile':\n              elem = (\n                // <PhoneInput country={'in'} placeholder={p.placeholder} onChange={(val, type) => onFeildChange(val, type)} />\n                <Input.Password placeholder={p.name}/>\n              )\n              break;\n\n            case 'upload':\n              elem = (\n                <Upload\n                  name=\"avatar\"\n                  listType=\"picture-card\"\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                  className=\"avatar-uploader\"\n                  defaultFileList={uploadList}\n                  // showUploadList={false}\n                  // beforeUpload={beforeUpload}\n                  onChange={handleUploadChange}\n                >\n                  {uploadList.length > 0 ? null : uploadButton}\n                </Upload>\n              )\n              break;\n\n            case 'upload-picture':\n              elem = (\n                <Upload\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                  name=\"avatar\"\n                  listType=\"picture\"\n                  className=\"avatar-uploader\"\n                  // showUploadList={false}\n                  defaultFileList={uploadList}\n                  //  fileList={uploadList}\n                  // beforeUpload={beforeUpload}\n                  onChange={handleUploadChange}\n                >\n                  {uploadList.length > 0 ? uploadButtonPicture(true) : uploadButtonPicture(false)}\n                </Upload>\n              )\n              break;\n\n            case 'radio':\n              elem = (<Radio.Group>\n                {p.values &&\n                  p.values.map((o) => {\n                    return (\n                      <Radio value={o.toUpperCase()}>{o}</Radio>\n                    )\n                  })\n                }\n              </Radio.Group>)\n              break;\n\n            case 'select':\n              elem = (\n                <Select\n                  style={{ width: p.width ? p.width : '100%' }}>\n                  {p.values &&\n                    p.values.map((o) => {\n                      // console.log(typeof o)\n                      return (\n                        <Option value={o.toUpperCase()}>{o}</Option>\n                      )\n                    })\n                  }\n                </Select>)\n              break;\n\n            case 'multiselect':\n              elem = (\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: p.width ? p.width : '100%' }}>\n                  {p.values &&\n                    p.values.map((o) => {\n                      // console.log(typeof o)\n                      if (typeof o == 'string') {\n                        return (\n                          <Option value={o.toUpperCase()}>{o}</Option>\n                        )\n                      } else if (typeof o == 'object') {\n                        // console.log('o', o)\n                        return (\n                          <Option value={o.slugName.toUpperCase()}>{o.value.toUpperCase()}</Option>\n                        )\n                      }\n\n                    })\n                  }\n                </Select>)\n              break;\n\n            case 'multi':\n              elem = (\n                <DynamicFieldSet field={p} />)\n              break;\n\n            case 'datepicker':\n              elem = (\n                <DatePicker onChange={(date, val) => {\n                  if (props.onChange) {\n\n                    props.onChange(date, val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n            case 'daterangepicker':\n              elem = (\n                <RangePicker onChange={(date, val) => {\n                  if (props.onChange) {\n\n                    props.onChange(date, val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n\n\n            case 'datepicker':\n              elem = (\n                <DatePicker onChange={(val) => {\n                  if (props.onChange) {\n\n                    props.onChange(val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n\n\n            case 'inputGroup':\n              elem = (\n                <DatePicker onChange={(val) => {\n                  if (props.onChange) {\n                    props.onChange(val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n\n            case 'textarea':\n              elem = (\n                <Input.TextArea placeholder={p.placeholder ? p.placeholder : p.name} />)\n              break;\n\n            default:\n          }\n\n\n          return (\n            <>\n              <Col span={span}\n              // xs={calculateSpan(span, 'xs')} \n              // sm={calculateSpan(span, 'sm')} \n              // md={calculateSpan(span, 'md')} \n              // lg={calculateSpan(span, 'lg')} \n              // xl={calculateSpan(span, 'xl')} \n              // xxl={calculateSpan(span, 'xxl')}\n              >\n                <Form.Item\n                  colon={false}\n                  labelAlign=\"right\"\n                  {...layout}\n                  label={p.showlabel == undefined || (p.showlabel != undefined && p.showlabel == true) ? p.label : null}\n                  name={p.name}\n                  // valuePropName={'checked'}\n                  rules={\n                    [\n                      {\n                        required: p.required,\n                        message: p.message ? p.message : p.placeholder ? `please input ${p.placeholder}` : ''\n                      },\n                      ({ getFieldValue }) => ({\n                        validator: (rule, value) => {\n                          if (value) {\n                            // console.log('p.custValidation && p.custValidation[0]',p.custValidation && p.custValidation[0])\n                            if (p.custValidation && p.custValidation[0] && p.custValidation[0].type == 'regx') {\n                              if (!value.match(p.custValidation[0].validator)) {\n                                return Promise.reject(`${p.custValidation[0].message}`);\n                              }\n                            }\n                          }\n                          return Promise.resolve();\n                          // console.log('value')\n                        }\n                      })\n                      // ({ getFieldValue }) => ({\n                      //   validator(rule, value ,cb) {\n                      //     // console.log(rule,value,cb)\n                      //     return Promise.resolve();\n                      //     // if (!value || getFieldValue('password') === value) {\n                      //     //   return Promise.resolve();\n                      //     // }\n\n                      //     // return Promise.reject('The two passwords that you entered do not match!');\n                      //   },\n                      // }),\n                    ]}\n                >\n                  {elem}\n                </Form.Item>\n              </Col>\n              {p.divider &&\n\n                <Divider />\n              }\n            </>\n          )\n\n        })}\n      </Row>\n      {/* </div> */}\n\n      {props.render ? props.render() : null}\n\n      {/* <Form.Item {...tailLayout} style={{textAlign:'right'}}>\n          <Button type=\"primary\" \n          htmlType=\"submit\"\n          // onClick={()=>{\n            //   callCustValidation(form)\n            // }}\n            >\n            {props.buttonName ? props.buttonName : 'Save'}\n            </Button>\n          </Form.Item> */}\n      {/* </Form> */}\n    </>\n  )\n}\n\nexport default CustomForm","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/index.js",["77","78","79","80","81","82","83"],"\nimport React, { useState, useEffect } from 'react'\nimport { Form, Input, Button, Row, Col, Select, InputNumber } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\nlet layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nconst DynamicFieldSet = (props) => {\n  const [form] = Form.useForm()\n  let mainField = props.field;\n  const [option, setoption] = useState(null)\n  let main=mainField[0].name\n\n  useEffect(() => {\n    form.setFieldsValue({\n      response:mainField[0].initialValue\n    })\n  }, []);\n  const rules = [{ required: true }];\n  // console.log('props',props)\n  return (\n    <Form.List name={mainField[0].name} rules={rules} >\n    {(fields, { add, remove ,move}) => {\n    \n      //  console.log('fields',fields)\n      return (\n        <div>\n          {fields.map((field, index) => (\n            <Row key={field.key} gutter={14}>\n              <Col span={12}>\n                <Form.Item\n                  name={[field.name, \"response\"]}\n                  fieldKey={[field.fieldKey, \"response\"]}\n                  // initialValue={mainField[0].initialValue[index].response}\n                  // initialValue={[field.initialValue,\"response\"]}\n                  rules={rules}\n                >\n                  {mainField[0].values ?\n                  option != null && option == 'between' ? \n                  \n                  <Input.Group compact>\n                  <Form.Item\n                    name={[field.name, 'response','from']}\n                    noStyle\n                    rules={[{ required: true, message: 'From value is required' }]}\n                  >\n                   <InputNumber style={{ width: '50%' }} placeholder=\"From\" />\n                  </Form.Item>\n                  <Form.Item\n                    name={[field.name, 'response','to']}\n                    noStyle\n                    rules={[{ required: true, message: 'To value is required' }]}\n                  >\n                   <InputNumber style={{ width: '50%' }} placeholder=\"To\" />\n                  </Form.Item>\n                </Input.Group>\n                  :\n                  <InputNumber placeholder=\"Response\" style={{width:'100%'}}/>\n                  :\n                  <Input placeholder=\"Response\" />\n                  }\n                </Form.Item>\n              </Col>\n              <Col span={10}>\n                <Form.Item\n                  name={[field.name, \"summary\"]}\n                  fieldKey={[field.fieldKey, \"summary\"]}\n                  // initialValue={[field.initialValue,\"summary\"]}\n                  rules={rules}\n                >\n                  {mainField[0].values ?\n                   <Select \n                   onChange={(val)=>{\n                    //  setoption(val)\n                   }}\n                   style={{ width:'100%'}}>\n                   {mainField[0].values.map((o)=>{\n                     return(\n                       <Select.Option value={o.value}>{o.title}</Select.Option>\n                     )\n                   })\n                   }\n                 </Select>:\n                  <Input placeholder=\"summary\" />\n                 }\n                </Form.Item>\n              </Col>\n              <Col flex=\"none\" span={2}>\n                <MinusCircleOutlined\n                  className=\"dynamic-delete-button\"\n                  onClick={() => {\n                    remove(field.name);\n                  }}\n                />\n              </Col>\n            </Row>\n          ))}\n          <Form.Item>\n            <Button\n              type=\"dashed\"\n              onClick={() => {\n                add();\n              }}\n              style={{ width: \"100%\" }}\n            >\n              <PlusOutlined /> Add field\n            </Button>\n          </Form.Item>\n        </div>\n      );\n    }}\n  </Form.List>\n   \n  );\n};\nexport default DynamicFieldSet","/home/pranjal/work/packages/simplified-antd/src/components/form/demo/basicRegistrationForm.js",["84"],"/home/pranjal/work/packages/simplified-antd/src/components/form/demo/fields.js",["85","86","87","88","89","90","91","92","93","94"],"/home/pranjal/work/packages/simplified-antd/src/components/birthDate/index.js",["95","96","97","98","99","100","101","102","103","104","105"],"/home/pranjal/work/packages/simplified-antd/src/components/searchInput/index.js",["106","107","108","109","110","111"],"import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nlet timeout;\nlet currentValue;\n\nfunction fetch(value, callback) {\n \n}\n\nclass SearchInputComp extends React.Component {\n  constructor(props){\n    super(props)\n  }\n  state = {\n    data: [],\n    value: undefined,\n  };\n\n  handleSearch = value => {\n    // if (value) {\n    //   fetch(value, data => this.setState({ data }));\n    //   this.props.SearchPatientWithName(value)\n    // } else {\n    //   this.setState({ data: [] });\n    // }\n  };\n\n  handleChange = value => {\n    this.setState({ value });\n    this.props.onChangeVal(this.props.type,value)\n  };\n\n  render() {\n// console.log(this.props.data)\n    const options = (this.props.data ? this.props.data : []).map(d => <Option key={d} value={d}>{d}</Option>);\n    return (\n      <Select\n        disabled={this.props.data.length == 0}\n        showSearch\n        value={this.props.value != null ? this.props.value : this.state.value}\n        placeholder={this.props.placeholder}\n        style={this.props.style}\n        defaultActiveFirstOption={false}\n        showArrow={false}\n        filterOption={false}\n        onSearch={this.handleSearch}\n        onChange={this.handleChange}\n        notFoundContent={null}\n        filterOption={(input, option) =>{\n         return option.key.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        }\n      >\n        {options}\n      </Select>\n    );\n  }\n}\n\nexport default SearchInputComp;",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":18,"nodeType":"118","messageId":"119","endLine":1,"endColumn":27},{"ruleId":"116","severity":1,"message":"120","line":1,"column":29,"nodeType":"118","messageId":"119","endLine":1,"endColumn":37},{"ruleId":"116","severity":1,"message":"121","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"122","line":2,"column":18,"nodeType":"118","messageId":"119","endLine":2,"endColumn":22},{"ruleId":"116","severity":1,"message":"123","line":2,"column":24,"nodeType":"118","messageId":"119","endLine":2,"endColumn":34},{"ruleId":"116","severity":1,"message":"124","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":22},{"ruleId":"116","severity":1,"message":"125","line":3,"column":24,"nodeType":"118","messageId":"119","endLine":3,"endColumn":38},{"ruleId":"116","severity":1,"message":"126","line":3,"column":40,"nodeType":"118","messageId":"119","endLine":3,"endColumn":60},{"ruleId":"116","severity":1,"message":"127","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":22},{"ruleId":"116","severity":1,"message":"128","line":5,"column":26,"nodeType":"118","messageId":"119","endLine":5,"endColumn":35},{"ruleId":"116","severity":1,"message":"129","line":18,"column":7,"nodeType":"118","messageId":"119","endLine":18,"endColumn":17},{"ruleId":"116","severity":1,"message":"130","line":23,"column":7,"nodeType":"118","messageId":"119","endLine":23,"endColumn":15},{"ruleId":"116","severity":1,"message":"131","line":32,"column":7,"nodeType":"118","messageId":"119","endLine":32,"endColumn":21},{"ruleId":"116","severity":1,"message":"132","line":108,"column":7,"nodeType":"118","messageId":"119","endLine":108,"endColumn":25},{"ruleId":"116","severity":1,"message":"133","line":134,"column":10,"nodeType":"118","messageId":"119","endLine":134,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":142,"column":38,"nodeType":"136","messageId":"137","endLine":142,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":146,"column":38,"nodeType":"136","messageId":"137","endLine":146,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":150,"column":38,"nodeType":"136","messageId":"137","endLine":150,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":160,"column":42,"nodeType":"136","messageId":"137","endLine":160,"endColumn":44},{"ruleId":"116","severity":1,"message":"138","line":185,"column":9,"nodeType":"118","messageId":"119","endLine":185,"endColumn":22},{"ruleId":"134","severity":1,"message":"139","line":212,"column":121,"nodeType":"136","messageId":"137","endLine":212,"endColumn":123},{"ruleId":"134","severity":1,"message":"139","line":214,"column":142,"nodeType":"136","messageId":"137","endLine":214,"endColumn":144},{"ruleId":"134","severity":1,"message":"139","line":232,"column":50,"nodeType":"136","messageId":"137","endLine":232,"endColumn":52},{"ruleId":"140","severity":1,"message":"141","line":315,"column":38,"nodeType":"142","messageId":"143","endLine":315,"endColumn":40},{"ruleId":"144","severity":1,"message":"145","line":358,"column":13,"nodeType":"146","messageId":"137","endLine":366,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":401,"column":38,"nodeType":"136","messageId":"137","endLine":401,"endColumn":40},{"ruleId":"134","severity":1,"message":"139","line":401,"column":67,"nodeType":"136","messageId":"137","endLine":401,"endColumn":69},{"ruleId":"134","severity":1,"message":"135","line":401,"column":95,"nodeType":"136","messageId":"137","endLine":401,"endColumn":97},{"ruleId":"134","severity":1,"message":"135","line":414,"column":101,"nodeType":"136","messageId":"137","endLine":414,"endColumn":103},{"ruleId":"116","severity":1,"message":"147","line":6,"column":7,"nodeType":"118","messageId":"119","endLine":6,"endColumn":21},{"ruleId":"116","severity":1,"message":"148","line":16,"column":7,"nodeType":"118","messageId":"119","endLine":16,"endColumn":33},{"ruleId":"116","severity":1,"message":"149","line":22,"column":5,"nodeType":"118","messageId":"119","endLine":22,"endColumn":11},{"ruleId":"116","severity":1,"message":"150","line":30,"column":18,"nodeType":"118","messageId":"119","endLine":30,"endColumn":27},{"ruleId":"116","severity":1,"message":"151","line":31,"column":7,"nodeType":"118","messageId":"119","endLine":31,"endColumn":11},{"ruleId":"152","severity":1,"message":"153","line":37,"column":6,"nodeType":"154","endLine":37,"endColumn":8,"suggestions":"155"},{"ruleId":"134","severity":1,"message":"135","line":58,"column":44,"nodeType":"136","messageId":"137","endLine":58,"endColumn":46},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":3,"column":5,"nodeType":"118","messageId":"158","endLine":3,"endColumn":10},{"ruleId":"156","severity":1,"message":"159","line":4,"column":5,"nodeType":"118","messageId":"158","endLine":4,"endColumn":10},{"ruleId":"156","severity":1,"message":"160","line":5,"column":5,"nodeType":"118","messageId":"158","endLine":5,"endColumn":10},{"ruleId":"156","severity":1,"message":"161","line":6,"column":5,"nodeType":"118","messageId":"158","endLine":6,"endColumn":10},{"ruleId":"156","severity":1,"message":"162","line":7,"column":5,"nodeType":"118","messageId":"158","endLine":7,"endColumn":14},{"ruleId":"156","severity":1,"message":"163","line":8,"column":5,"nodeType":"118","messageId":"158","endLine":8,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":80,"column":40,"nodeType":"166","messageId":"167","endLine":80,"endColumn":41,"suggestions":"168"},{"ruleId":"164","severity":1,"message":"165","line":80,"column":65,"nodeType":"166","messageId":"167","endLine":80,"endColumn":66,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"165","line":80,"column":74,"nodeType":"166","messageId":"167","endLine":80,"endColumn":75,"suggestions":"170"},{"ruleId":"164","severity":1,"message":"165","line":80,"column":78,"nodeType":"166","messageId":"167","endLine":80,"endColumn":79,"suggestions":"171"},{"ruleId":"116","severity":1,"message":"172","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"173","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"174","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":15},{"ruleId":"116","severity":1,"message":"175","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":29},{"ruleId":"116","severity":1,"message":"176","line":2,"column":31,"nodeType":"118","messageId":"119","endLine":2,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":23,"column":45,"nodeType":"136","messageId":"137","endLine":23,"endColumn":47},{"ruleId":"134","severity":1,"message":"139","line":35,"column":35,"nodeType":"136","messageId":"137","endLine":35,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":50,"column":13,"nodeType":"136","messageId":"137","endLine":50,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":55,"column":13,"nodeType":"136","messageId":"137","endLine":55,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":61,"column":13,"nodeType":"136","messageId":"137","endLine":61,"endColumn":15},{"ruleId":"116","severity":1,"message":"177","line":76,"column":26,"nodeType":"118","messageId":"119","endLine":76,"endColumn":31},{"ruleId":"116","severity":1,"message":"178","line":6,"column":5,"nodeType":"118","messageId":"119","endLine":6,"endColumn":12},{"ruleId":"116","severity":1,"message":"179","line":7,"column":5,"nodeType":"118","messageId":"119","endLine":7,"endColumn":17},{"ruleId":"116","severity":1,"message":"180","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":14,"column":3,"nodeType":"183","messageId":"184","endLine":16,"endColumn":4},{"ruleId":"134","severity":1,"message":"135","line":41,"column":42,"nodeType":"136","messageId":"137","endLine":41,"endColumn":44},{"ruleId":"185","severity":1,"message":"186","line":52,"column":9,"nodeType":"187","endLine":55,"endColumn":10},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Layout' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'validateFields' is defined but never used.","'FormProps' is defined but never used.","'tailLayout' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'callCustValidation' is assigned a value but never used.","'form' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onFeildChange' is assigned a value but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-duplicate-case","Duplicate case label.","SwitchCase","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","'layout' is assigned a value but never used.","'setoption' is assigned a value but never used.","'main' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form' and 'mainField'. Either include them or remove the dependency array.","ArrayExpression",["190"],"no-use-before-define","'fName' was used before it was defined.","usedBeforeDefined","'mName' was used before it was defined.","'lName' was used before it was defined.","'email' was used before it was defined.","'fieldsArr' was used before it was defined.","'fieldsBirthDate' was used before it was defined.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["191","192"],["193","194"],["195","196"],["197","198"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.","'AutoComplete' is defined but never used.","'Button' is defined but never used.","'dates' is assigned a value but never used.","'timeout' is defined but never used.","'currentValue' is defined but never used.","'fetch' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"204","fix":"205","desc":"206"},{"messageId":"201","fix":"207","desc":"203"},{"messageId":"204","fix":"208","desc":"206"},{"messageId":"201","fix":"209","desc":"203"},{"messageId":"204","fix":"210","desc":"206"},{"messageId":"201","fix":"211","desc":"203"},{"messageId":"204","fix":"212","desc":"206"},"Update the dependencies array to be: [form, mainField]",{"range":"213","text":"214"},"removeEscape",{"range":"215","text":"216"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"217","text":"218"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"219","text":"216"},{"range":"220","text":"218"},{"range":"221","text":"216"},{"range":"222","text":"218"},{"range":"223","text":"216"},{"range":"224","text":"218"},[829,831],"[form, mainField]",[1585,1586],"",[1585,1585],"\\",[1610,1611],[1610,1610],[1619,1620],[1619,1619],[1623,1624],[1623,1623]]