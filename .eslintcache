[{"/home/pranjal/work/packages/simplified-antd/src/index.js":"1","/home/pranjal/work/packages/simplified-antd/src/reportWebVitals.js":"2","/home/pranjal/work/packages/simplified-antd/src/App.js":"3","/home/pranjal/work/packages/simplified-antd/src/components/index.js":"4","/home/pranjal/work/packages/simplified-antd/src/components/form/index.js":"5","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/index.js":"6","/home/pranjal/work/packages/simplified-antd/src/components/form/demo/basicRegistrationForm.js":"7","/home/pranjal/work/packages/simplified-antd/src/components/form/demo/fields.js":"8","/home/pranjal/work/packages/simplified-antd/src/components/birthDate/index.js":"9","/home/pranjal/work/packages/simplified-antd/src/components/searchInput/index.js":"10","/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/index.js":"11","/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/demo/index.js":"12"},{"size":478,"mtime":1609595413326,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609595413326,"results":"15","hashOfConfig":"14"},{"size":339,"mtime":1609605935939,"results":"16","hashOfConfig":"14"},{"size":156,"mtime":1609595413326,"results":"17","hashOfConfig":"14"},{"size":13982,"mtime":1609604431221,"results":"18","hashOfConfig":"14"},{"size":4151,"mtime":1609595413326,"results":"19","hashOfConfig":"14"},{"size":1106,"mtime":1609598215336,"results":"20","hashOfConfig":"14"},{"size":3431,"mtime":1609604600807,"results":"21","hashOfConfig":"14"},{"size":5283,"mtime":1609597174360,"results":"22","hashOfConfig":"14"},{"size":1470,"mtime":1609595413326,"results":"23","hashOfConfig":"14"},{"size":5992,"mtime":1609608045597,"results":"24","hashOfConfig":"14"},{"size":994,"mtime":1609607926420,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q2bqho",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pranjal/work/packages/simplified-antd/src/index.js",[],"/home/pranjal/work/packages/simplified-antd/src/reportWebVitals.js",[],"/home/pranjal/work/packages/simplified-antd/src/App.js",["57","58","59"],"/home/pranjal/work/packages/simplified-antd/src/components/index.js",[],["60","61"],"/home/pranjal/work/packages/simplified-antd/src/components/form/index.js",["62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"import React, { useState } from 'react';\nimport { Layout, Menu, Breadcrumb, Divider } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Checkbox, Row, Col, Upload, Radio, Select, DatePicker } from 'antd';\nimport validateFields, { FormProps } from 'antd/lib/form'\nimport DynamicFieldSet from '../dynamicField';\nimport BirthDateComp from '../birthDate';\nimport moment from 'moment';\n\n// import { gutter, calculateSpan } from '../commonImports/responsiveSettings';\n// import PhoneInput from 'react-phone-input-2'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'YYYY/MM/DD';\n\n// direction - optional \n// columns - optional\n\n\nconst tailLayout = {\n  wrapperCol: { offset: 20, span: 4 },\n};\n\n\nconst onFinish = (values, props) => {\n  // console.log('Success:', values);\n  if (props.setFormValues && props.handleSubmit) {\n\n    props.setFormValues(values)\n    props.handleSubmit(values)\n  }\n};\n\nconst onFinishFailed = (errorInfo, props) => {\n  console.log('Failed:', errorInfo);\n  if (props.handleError) {\n    props.handleError(errorInfo)\n  }\n};\n\n// const fields = [\n//   {\n//     type:'input',\n//     label: 'Username',\n//     name:'username',\n//     required:true,\n//     message:'Please input username',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'input',\n//     label: 'Email',\n//     name:'userEmail',\n//     required:true,\n//     message:'Please input email',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'password',\n//     label: 'Password',\n//     name:'password',\n//     required:true,\n//     message:'Please input password',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'input',\n//     label: 'Username',\n//     name:'username',\n//     required:false,\n//     message:'Please input username',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'upload',\n//     label: 'Photo Upload',\n//     name:'userPhoto',\n//     required:true,\n//     message:'Please input email',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'checkbox',\n//     label: 'Remember Me',\n//     name:'remember',\n//     required:false,\n//     message:'Please input password',\n//     custValidation:[{\n\n//     }]\n//   }\n// ]\n\n// const initialValues = {\n//   password:'password',\n//   userEmail:'abc@gmail.com',\n//   remember:true\n// }\n\nconst callCustValidation = (form) => {\n  form.validateFields()\n    .then((values) => {\n      console.log(values)\n    })\n    .catch((errorInfo) => {\n      console.log(errorInfo)\n      /*\n      errorInfo:\n        {\n          values: {\n            username: 'username',\n            password: 'password',\n          },\n          errorFields: [\n            { password: ['username'], errors: ['Please input your Password!'] },\n          ],\n          outOfDate: false,\n        }\n      */\n    });\n}\n\n\n\nconst CustomForm = (props) => {\n  const [form] = Form.useForm();\n\n  const [uploadList, setuploadList] = useState(props.photoArr ? props.photoArr : [])\n  const [uploadListPicture, setuploadListPicture] = useState(props.photoArr ? props.photoArr : [])\n\n\n\n  // validateFields(props)\n  let span = 24;\n  // console.log(form)\n  if (props.columns && props.columns == 2) {\n    span = 12\n  }\n\n  if (props.columns && props.columns == 3) {\n    span = 8\n  }\n\n  if (props.columns && props.columns == 4) {\n    span = 6\n  }\n\n\n  let layout = props.layout ? props.layout : {\n    labelCol: { span: 24 },\n    wrapperCol: { span: 24 },\n  };\n\n  if (props.direction && props.direction == 'HORIZONTAL') {\n    layout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 18 },\n    };\n  }\n\n  const uploadButton = (\n    <div>\n      {/* {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />} */}\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  );\n\n\n  const uploadButtonPicture = (a) => (\n    <Button disabled={a}>\n      <UploadOutlined /> Upload\n    </Button>\n  )\n\n  const handleUploadChange = (file) => {\n    // console.log(file)\n    setuploadList(file.fileList)\n  }\n\n  const handleUploadChangePicture = (file) => {\n    // console.log(file)\n    setuploadListPicture(file.fileList)\n  }\n\n  const onFeildChange = (val, type) => {\n    // console.log('props.....',props)\n    if (props.onChangeMob) {\n      props.onChangeMob(val, type)\n    }\n  }\n\n  return (\n    //   <Form\n    //     {...layout}\n    //     name=\"basic\"\n    //     initialValues={props.initialValues}\n    //     onFinish={(values)=>{\n    //       onFinish(values,props)}}\n    //     onFinishFailed={(errorInfo)=>{\n    //       onFinishFailed(errorInfo, props)}}\n    // >\n    <>\n      <Row gutter={32}>\n        {/* <div style={{display:'flex',flexDirection:'column', flexWrap:'wrap', justifyContent:'space-between'}}> */}\n        {props.fields && props.fields.map((p) => {\n          // console.log('phjgjh',p)\n          let style = { width: '100%' }\n          if (p.width) {\n            style.width = p.width\n          }\n          let elemType = p.type;\n          let elem = <Input disabled={props.disabled ? props.disabled : false} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n          if (p.prefix) {\n            elem = <Input disabled={props.disabled ? props.disabled : false} addonBefore={p.prefix} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n          }\n\n\n          switch (elemType) {\n            case 'checkbox':\n              elem = (\n                p.values ? (<Checkbox.Group>\n                { p.values.map((m) => {\n                  return (\n                    <Checkbox value={m}>{m}</Checkbox>\n                  )\n                }) \n                }\n\n              </Checkbox.Group>)\n              :\n\n              <Checkbox value={p.name}>{p.option != undefined ? p.option : p.label}</Checkbox>\n              )\n              break;\n\n            case 'password':\n              elem = (<Input.Password placeholder={p.name} />)\n              break;\n\n            case 'mobile':\n              elem = (\n                // <PhoneInput country={'in'} placeholder={p.placeholder} onChange={(val, type) => onFeildChange(val, type)} />\n                <Input placeholder={p.name}/>\n              )\n              break;\n\n            case 'upload':\n              elem = (\n                <Upload\n                  name=\"avatar\"\n                  listType=\"picture-card\"\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                  className=\"avatar-uploader\"\n                  defaultFileList={uploadList}\n                  // showUploadList={false}\n                  // beforeUpload={beforeUpload}\n                  onChange={handleUploadChange}\n                >\n                  {uploadList.length >= (p.limit ? p.limit : 0) ? null : uploadButton}\n                </Upload>\n              )\n              break;\n\n            case 'upload-picture':\n              elem = (\n                <Upload\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                  name=\"avatar\"\n                  listType=\"picture\"\n                  className=\"avatar-uploader\"\n                  // showUploadList={false}\n                  defaultFileList={uploadListPicture}\n                  //  fileList={uploadList}\n                  // beforeUpload={beforeUpload}\n                  onChange={handleUploadChangePicture}\n                >\n                  {uploadListPicture.length >= (p.limit ? p.limit : 0) ? uploadButtonPicture(true) : uploadButtonPicture(false)}\n                </Upload>\n              )\n              break;\n\n            case 'radio':\n              elem = (<Radio.Group>\n                {p.values &&\n                  p.values.map((o) => {\n                    return (\n                      <Radio value={o.toUpperCase()}>{o}</Radio>\n                    )\n                  })\n                }\n              </Radio.Group>)\n              break;\n\n            case 'select':\n              elem = (\n                <Select\n                  style={{ width: p.width ? p.width : '100%' }}>\n                  {p.values &&\n                    p.values.map((o) => {\n                      // console.log(typeof o)\n                      return (\n                        <Option value={o.toUpperCase()}>{o}</Option>\n                      )\n                    })\n                  }\n                </Select>)\n              break;\n\n            case 'multiselect':\n              elem = (\n                <Select\n                  mode=\"multiple\"\n                  placeholder={p.label}\n                  style={{ width: p.width ? p.width : '100%' }}>\n                  {p.values &&\n                    p.values.map((o) => {\n                      return(\n                        <Option value={o.value} key={o.value}>{o.label}</Option>\n                      )\n                    })\n                  }\n                </Select>)\n              break;\n\n            case 'multi':\n              elem = (\n                <DynamicFieldSet field={p} />)\n              break;\n\n            case 'datepicker':\n              elem = (\n                <DatePicker onChange={(date, val) => {\n                  if (props.onChange) {\n                    props.onChange(date, val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n\n            case 'daterangepicker':\n              elem = (\n                <RangePicker onChange={(date, val) => {\n                  if (props.onChange) {\n                    props.onChange(date, val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n\n\n            case 'datepicker':\n              elem = (\n                <DatePicker onChange={(val) => {\n                  if (props.onChange) {\n                    props.onChange(val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n\n\n            case 'inputGroup':\n              elem = (\n                <DatePicker onChange={(val) => {\n                  if (props.onChange) {\n                    props.onChange(val)\n                  }\n                }} format={dateFormat} style={{ width: '100%' }} />)\n              break;\n\n            case 'textarea':\n              elem = (\n                <Input.TextArea placeholder={p.placeholder ? p.placeholder : p.name} />)\n              break;\n\n            case 'birthDate':\n              elem = (\n                <BirthDateComp\n                fieldName={p.name}\n                date={props.form ? props.form.getFieldValue(p.name) : ''}\n                onChange={(val) => {\n                  if(props.form){\n                    props.form.setFieldsValue({\n                      [p.name]: moment(val).format('YYYY-MM-DD')\n                    })\n                  }\n                }} />)\n              break;\n            default:\n          }\n\n          return (\n            <>\n              <Col span={span}\n              // xs={calculateSpan(span, 'xs')} \n              // sm={calculateSpan(span, 'sm')} \n              // md={calculateSpan(span, 'md')} \n              // lg={calculateSpan(span, 'lg')} \n              // xl={calculateSpan(span, 'xl')} \n              // xxl={calculateSpan(span, 'xxl')}\n              >\n                <Form.Item\n                  colon={false}\n                  labelAlign=\"right\"\n                  {...layout}\n                  label={p.showlabel == undefined || (p.showlabel != undefined && p.showlabel == true) ? p.label : null}\n                  name={p.name}\n                  // valuePropName={'checked'}\n                  rules={\n                    [\n                      {\n                        required: p.required,\n                        message: p.message ? p.message : p.placeholder ? `please input ${p.placeholder}` : ''\n                      },\n                      ({ getFieldValue }) => ({\n                        validator: (rule, value) => {\n                          if (value) {\n                            // console.log('p.custValidation && p.custValidation[0]',p.custValidation && p.custValidation[0])\n                            if (p.custValidation && p.custValidation[0] && p.custValidation[0].type == 'regx') {\n                              if (!value.match(p.custValidation[0].validator)) {\n                                return Promise.reject(`${p.custValidation[0].message}`);\n                              }\n                            }\n                          }\n                          return Promise.resolve();\n                          // console.log('value')\n                        }\n                      })\n                      // ({ getFieldValue }) => ({\n                      //   validator(rule, value ,cb) {\n                      //     // console.log(rule,value,cb)\n                      //     return Promise.resolve();\n                      //     // if (!value || getFieldValue('password') === value) {\n                      //     //   return Promise.resolve();\n                      //     // }\n\n                      //     // return Promise.reject('The two passwords that you entered do not match!');\n                      //   },\n                      // }),\n                    ]}\n                >\n                  {elem}\n                </Form.Item>\n              </Col>\n              {p.divider &&\n\n                <Divider />\n              }\n            </>\n          )\n\n        })}\n      </Row>\n      {/* </div> */}\n\n      {props.render ? props.render() : null}\n\n      {/* <Form.Item {...tailLayout} style={{textAlign:'right'}}>\n          <Button type=\"primary\" \n          htmlType=\"submit\"\n          // onClick={()=>{\n            //   callCustValidation(form)\n            // }}\n            >\n            {props.buttonName ? props.buttonName : 'Save'}\n            </Button>\n          </Form.Item> */}\n      {/* </Form> */}\n    </>\n  )\n}\n\nexport default CustomForm","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/index.js",["88","89","90","91","92","93","94"],"\nimport React, { useState, useEffect } from 'react'\nimport { Form, Input, Button, Row, Col, Select, InputNumber } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\nlet layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nconst DynamicFieldSet = (props) => {\n  const [form] = Form.useForm()\n  let mainField = props.field;\n  const [option, setoption] = useState(null)\n  let main=mainField[0].name\n\n  useEffect(() => {\n    form.setFieldsValue({\n      response:mainField[0].initialValue\n    })\n  }, []);\n  const rules = [{ required: true }];\n  // console.log('props',props)\n  return (\n    <Form.List name={mainField[0].name} rules={rules} >\n    {(fields, { add, remove ,move}) => {\n    \n      //  console.log('fields',fields)\n      return (\n        <div>\n          {fields.map((field, index) => (\n            <Row key={field.key} gutter={14}>\n              <Col span={12}>\n                <Form.Item\n                  name={[field.name, \"response\"]}\n                  fieldKey={[field.fieldKey, \"response\"]}\n                  // initialValue={mainField[0].initialValue[index].response}\n                  // initialValue={[field.initialValue,\"response\"]}\n                  rules={rules}\n                >\n                  {mainField[0].values ?\n                  option != null && option == 'between' ? \n                  \n                  <Input.Group compact>\n                  <Form.Item\n                    name={[field.name, 'response','from']}\n                    noStyle\n                    rules={[{ required: true, message: 'From value is required' }]}\n                  >\n                   <InputNumber style={{ width: '50%' }} placeholder=\"From\" />\n                  </Form.Item>\n                  <Form.Item\n                    name={[field.name, 'response','to']}\n                    noStyle\n                    rules={[{ required: true, message: 'To value is required' }]}\n                  >\n                   <InputNumber style={{ width: '50%' }} placeholder=\"To\" />\n                  </Form.Item>\n                </Input.Group>\n                  :\n                  <InputNumber placeholder=\"Response\" style={{width:'100%'}}/>\n                  :\n                  <Input placeholder=\"Response\" />\n                  }\n                </Form.Item>\n              </Col>\n              <Col span={10}>\n                <Form.Item\n                  name={[field.name, \"summary\"]}\n                  fieldKey={[field.fieldKey, \"summary\"]}\n                  // initialValue={[field.initialValue,\"summary\"]}\n                  rules={rules}\n                >\n                  {mainField[0].values ?\n                   <Select \n                   onChange={(val)=>{\n                    //  setoption(val)\n                   }}\n                   style={{ width:'100%'}}>\n                   {mainField[0].values.map((o)=>{\n                     return(\n                       <Select.Option value={o.value}>{o.title}</Select.Option>\n                     )\n                   })\n                   }\n                 </Select>:\n                  <Input placeholder=\"summary\" />\n                 }\n                </Form.Item>\n              </Col>\n              <Col flex=\"none\" span={2}>\n                <MinusCircleOutlined\n                  className=\"dynamic-delete-button\"\n                  onClick={() => {\n                    remove(field.name);\n                  }}\n                />\n              </Col>\n            </Row>\n          ))}\n          <Form.Item>\n            <Button\n              type=\"dashed\"\n              onClick={() => {\n                add();\n              }}\n              style={{ width: \"100%\" }}\n            >\n              <PlusOutlined /> Add field\n            </Button>\n          </Form.Item>\n        </div>\n      );\n    }}\n  </Form.List>\n   \n  );\n};\nexport default DynamicFieldSet","/home/pranjal/work/packages/simplified-antd/src/components/form/demo/basicRegistrationForm.js",["95"],"import React, { Component } from 'react';\nimport CustomForm from '../index';\nimport * as fields from './fields';\nimport { Button, Form, Card } from 'antd'\n\nconst BasicRegistrationForm=()=>{\n    const [form] = Form.useForm();\n    return(\n        <Card>\n            <Form\n            form={form}\n            //usual initial values for form \n            initialValues={{rememberMe:['Remember Me']}}\n            onFinish={(values) => {\n                //get values on form submit\n                console.log(values)\n            }}\n            onFinishFailed={(errorInfo) => {\n                //error log on failed submission\n                console.log(errorInfo)\n            }}\n            >\n                <h2>User Registration</h2>\n                {/* fields props is an array of objects */}\n                <CustomForm\n                    form={form}\n                    columns={2}\n                    fields={fields.fieldsArr}\n                />\n                <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n            </Form>\n        </Card>\n    )\n}\n\nexport default BasicRegistrationForm;","/home/pranjal/work/packages/simplified-antd/src/components/form/demo/fields.js",["96","97","98","99","100","101","102","103","104","105","106"],"\nexport { \n    fName,\n    mName,\n    lName,\n    email,\n    fieldsArr,\n    fieldsBirthDate,\n    areasOfInterests\n}\nconst genderValues = ['MALE', 'FEMALE', 'OTHER']\n\n\nconst areasOfInterests = [{\n  type: 'multiselect',\n  label: 'Areas of Interest',\n  name: 'areasOfInterest',\n  required: false,\n  message: 'Please upload photo',\n  values:[{label: 'Politics', value:'politics'}, { label: 'Science & Technology' , value: 'scienceAndTechnology'}]\n}]\n\n\nconst uploadPhoto1 = [{\n  type: 'upload',\n  label: 'Photo',\n  name: 'photo',\n  required: false,\n  limit:2,\n  message: 'Please upload photo'\n}]\n\n\nconst uploadPhoto = [{\n  type: 'upload-picture',\n  label: 'Photo',\n  name: 'photo',\n  placeholder: 'Photo',\n  required: false,\n  limit:1,\n  message: 'Please upload photo'\n}]\nconst fName = [{\n    type: 'input',\n    label: 'First Name',\n    name: 'fName',\n    required: true,\n    placeholder: 'First Name',\n    message: 'Please input first name',\n    custValidation: [{\n      validator: \"^[a-zA-Z]+$\",\n      message: 'Please enter valid name',\n      type: 'regx',\n    }]\n  }]\n  \n  const mName = [{\n    type: 'input',\n    label: 'Middle Name',\n    name: 'mName',\n    required: false,\n    placeholder: 'Middle Name',\n    message: 'Please input middle name',\n    custValidation: [{\n      validator: \"^[a-zA-Z]+$\",\n      message: 'Please enter valid name',\n      type: 'regx',\n    }]\n  }]\n  \n  const lName = [{\n    type: 'input',\n    label: 'Last Name',\n    name: 'lName',\n    required: true,\n    placeholder: 'Last Name',\n    message: 'Please input last name',\n    custValidation: [{\n      validator: \"^[a-zA-Z]+$\",\n      message: 'Please enter valid name',\n      type: 'regx',\n    }]\n  }]\n\n  const email = [{\n    type: 'input',\n    label: \"Email Id\",\n    name: 'emailId',\n    placeholder: 'Email Id',\n    required: true,\n    message: 'Please input email-id',\n    custValidation: [{\n      validator: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: 'Please enter valid Email address',\n      type: 'regx',\n    }]\n  }]\n\n  const gender = [\n    {\n      type: 'radio',\n      label: 'Gender',\n      name: 'gender',\n      required: false,\n      message: 'Please select gender',\n      values: genderValues,\n    }]\n\n    const rememberMe = [\n      {\n          type:'checkbox',\n          label: 'Remember Me',\n          name:'rememberMe',\n          required:false,\n          showlabel:false,\n          message:'Please input ',\n          values:['Remember Me'],\n          custValidation:[{\n            \n          }]\n        }\n    ]\n\n    const fieldsBirthDate = [\n      {\n        type: 'birthDate',\n        label: 'Birth Date',\n        name: 'birthDate',\n        required: false,\n        message: 'Please input date of birth',\n        custValidation: [{\n    \n        }]\n      }]\n\n      const password = [{\n        type: 'password',\n        label: 'Password',\n        name: 'password',\n        required: true,\n        placeholder: 'Password',\n        message: 'Please input Password',\n        // custValidation: [{\n        //   validator: \"^[a-zA-Z0-9]+$\",\n        //   message: 'Please enter valid password',\n        //   type: 'regx',\n        // }]\n      }]\n  const fieldsArr = [ ...uploadPhoto,...uploadPhoto1,  ...fName, ...mName, ...lName, ...email, ...gender, ...fieldsBirthDate, ...areasOfInterests, ...password, ...rememberMe];\n","/home/pranjal/work/packages/simplified-antd/src/components/birthDate/index.js",["107","108","109","110","111","112","113","114","115","116","117"],"import React, { useState, useEffect } from 'react';\nimport { Input, AutoComplete, Button } from 'antd';\nimport SearchInputComp from '../searchInput';\nimport moment from 'moment'\n\n\n  class BirthDateComp extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        years: [],\n        months: moment.monthsShort(),\n        dates: [],\n        selecetdYear:null,\n        selectedDate:null,\n        selectedMonth:null,\n        initial:false,\n        value:null\n      }\n    }\n\n    static getDerivedStateFromProps(props, state){\n      if(props.date != null && state.initial==false){\n        return{\n          value:props.date,\n          initial:true,\n          selecetdYear: moment(props.date).year(),\n          selectedDate: moment(props.date).format('DD'),\n          selectedMonth:moment(props.date).format('MMM')\n        }\n      }\n    }\n\n    componentDidMount(){\n      let moddate= this.props.date!=undefined && this.props.date!=null && this.props.date.split('-')\n      let yearData = [];\n      for(let i = 0;i<100;i++){\n        yearData.push(moment().subtract(i,'years').year())\n      }\n      this.setState({\n        years:yearData,\n        selecetdYear:moddate[0],\n        selectedMonth:moddate[1],\n        selectedDate:moddate[2]\n      })\n    }\n\n    \n   onChangeVal=(type,val)=>{\n    if(type == 'month'){\n      this.setState({\n        selectedMonth:val,\n      })\n    }\n    if(type == 'year'){\n      this.setState({\n        selecetdYear:val\n      })\n    }\n\n    if(type == 'day'){\n      this.setState({\n        selectedDate:val\n      })\n      // ,()=>{\n      //   // let m=this.props.form.getFieldValue(this.props.fieldName)\n      //   // this.props.form.setFieldsValue({\n      //     this.props.getBirthDate( `${selecetdYear?selecetdYear:moddate[0]}-${moment(selecetdYear?selecetdYear:moddate[0]).month(selectedMonth ? selectedMonth:moddate[1]).format(\"MM\")}-${val ? val:moddate[2]}`)\n      //   // })\n      // })\n    }\n  }\n\n\nrender(){\n  const { years, months, dates, selecetdYear, selectedMonth,selectedDate } = this.state;\n\n  let value = null;\n  if(selecetdYear != null && selectedMonth != null && selectedDate != null){\n    value = selecetdYear+'-'+selectedMonth+'-'+selectedDate;\n  }\n\n  if(value != null){\n    value = moment(value);\n  }\n \n \n  let date = null;\n  let month = null;\n  let year = null;\n\n  if(value != null){\n    date = value.date()\n  }\n\n  if(value != null){\n    month = value.format('MMM')\n  }\n\n  if(value != null){\n    year = value.year()\n  }\n\n\n  let dateArr = [];\n  if(selecetdYear != null && selectedMonth != null){\n    let monthNum = moment(selecetdYear).month(selectedMonth).format(\"MM\");\n    let numDate = moment(`${selecetdYear}-${monthNum}`, \"YYYY-MM\").daysInMonth();\n    for(let i = 1;i<numDate+1;i++){\n\n      let a = i<10?'0'+i : `${i}`;\n      dateArr.push(a)\n    }\n  }\n\n  if(selecetdYear != null && selectedMonth != null && selectedDate != null){\n      if(this.props.onChange){\n        // console.log('selecetdYear',selecetdYear,selectedMonth,selectedDate)\n\n        this.props.onChange(moment(`${selecetdYear}-${moment(selecetdYear).month(selectedMonth).format(\"MM\")}-${selectedDate}`))\n      }\n  }\n\n  return (\n    <div style={{display:'flex',flexDirection:'row', width:'100%'}}>\n        <SearchInputComp value={year} type=\"year\" placeholder=\"YYYY\" data={years} onChangeVal={this.onChangeVal} style={{flex:1}}/>\n        <SearchInputComp value={month} type=\"month\" placeholder=\"MM\" data={months} onChangeVal={this.onChangeVal} style={{flex:1}}/>\n        <SearchInputComp value={date} type=\"day\" placeholder=\"DD\" data={dateArr} onChangeVal={this.onChangeVal} style={{flex:1}}/>\n    </div>\n  );\n};\n  }\n\nexport default BirthDateComp\n\n// const BirthDateComp = () => {\n\n//   const [years, setyears] = useState([])\n//   const [months, setmonths] = useState(moment.monthsShort())\n//   const [dates, setdates] = useState([])\n//   const [selectedDate, setselectedDate] = useState(null)\n//   const [selectedMonth, setselectedMonth] = useState(null)\n//   const [selecetdYear, setselecetdYear] = useState(null)\n  \n//   useEffect(() => {\n//     let yearData = [];\n//     for(let i = 0;i<100;i++){\n//       yearData.push(moment().subtract(i,'years').year())\n//     }\n//     setyears(yearData)\n//   },[]);\n\n\n//   useEffect(() => {\n//     let dateArr = []\n//    if(selecetdYear != null && selectedMonth != null){\n//      let monthNum = moment(selecetdYear).month(selectedMonth).format(\"M\");\n//      let numDate = moment(`${selecetdYear}-${monthNum}`, \"YYYY-MM\").daysInMonth()\n//      for(let i = 1;i<numDate+1;i++){\n//       dateArr.push(i)\n//      }\n//      console.log(dateArr)\n//     //  setdates(dateArr)\n//    }\n//   })\n\n\n//   const onChangeVal=(type,val)=>{\n//     if(type == 'month'){\n//       setselectedMonth(val)\n//     }\n//     if(type == 'year'){\n//       setselecetdYear(val)\n//     }\n//   }\n\n//   return (\n//     <div style={{display:'flex',flexDirection:'row'}}>\n//         <SearchInputComp type=\"year\" placeholder=\"yyyy\" data={years} onChangeVal={onChangeVal}/>\n//         <SearchInputComp type=\"month\" placeholder=\"Month\" data={months} onChangeVal={onChangeVal}/>\n//         <SearchInputComp type=\"day\" placeholder=\"dd\" data={dates} onChangeVal={onChangeVal}/>\n//     </div>\n//   );\n// };\n\n// export default BirthDateComp","/home/pranjal/work/packages/simplified-antd/src/components/searchInput/index.js",["118","119","120","121","122","123"],"import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nlet timeout;\nlet currentValue;\n\nfunction fetch(value, callback) {\n \n}\n\nclass SearchInputComp extends React.Component {\n  constructor(props){\n    super(props)\n  }\n  state = {\n    data: [],\n    value: undefined,\n  };\n\n  handleSearch = value => {\n    // if (value) {\n    //   fetch(value, data => this.setState({ data }));\n    //   this.props.SearchPatientWithName(value)\n    // } else {\n    //   this.setState({ data: [] });\n    // }\n  };\n\n  handleChange = value => {\n    this.setState({ value });\n    this.props.onChangeVal(this.props.type,value)\n  };\n\n  render() {\n// console.log(this.props.data)\n    const options = (this.props.data ? this.props.data : []).map(d => <Option key={d} value={d}>{d}</Option>);\n    return (\n      <Select\n        disabled={this.props.data.length == 0}\n        showSearch\n        value={this.props.value != null ? this.props.value : this.state.value}\n        placeholder={this.props.placeholder}\n        style={this.props.style}\n        defaultActiveFirstOption={false}\n        showArrow={false}\n        filterOption={false}\n        onSearch={this.handleSearch}\n        onChange={this.handleChange}\n        notFoundContent={null}\n        filterOption={(input, option) =>{\n         return option.key.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        }\n      >\n        {options}\n      </Select>\n    );\n  }\n}\n\nexport default SearchInputComp;","/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/index.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/demo/index.js",["141","142","143"],{"ruleId":"144","severity":1,"message":"145","line":1,"column":18,"nodeType":"146","messageId":"147","endLine":1,"endColumn":27},{"ruleId":"144","severity":1,"message":"148","line":1,"column":29,"nodeType":"146","messageId":"147","endLine":1,"endColumn":37},{"ruleId":"144","severity":1,"message":"149","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":19},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"144","severity":1,"message":"154","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":16},{"ruleId":"144","severity":1,"message":"155","line":2,"column":18,"nodeType":"146","messageId":"147","endLine":2,"endColumn":22},{"ruleId":"144","severity":1,"message":"156","line":2,"column":24,"nodeType":"146","messageId":"147","endLine":2,"endColumn":34},{"ruleId":"144","severity":1,"message":"157","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":22},{"ruleId":"144","severity":1,"message":"158","line":3,"column":24,"nodeType":"146","messageId":"147","endLine":3,"endColumn":38},{"ruleId":"144","severity":1,"message":"159","line":3,"column":40,"nodeType":"146","messageId":"147","endLine":3,"endColumn":60},{"ruleId":"144","severity":1,"message":"160","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":22},{"ruleId":"144","severity":1,"message":"161","line":5,"column":26,"nodeType":"146","messageId":"147","endLine":5,"endColumn":35},{"ruleId":"144","severity":1,"message":"162","line":21,"column":7,"nodeType":"146","messageId":"147","endLine":21,"endColumn":17},{"ruleId":"144","severity":1,"message":"163","line":26,"column":7,"nodeType":"146","messageId":"147","endLine":26,"endColumn":15},{"ruleId":"144","severity":1,"message":"164","line":35,"column":7,"nodeType":"146","messageId":"147","endLine":35,"endColumn":21},{"ruleId":"144","severity":1,"message":"165","line":111,"column":7,"nodeType":"146","messageId":"147","endLine":111,"endColumn":25},{"ruleId":"144","severity":1,"message":"166","line":137,"column":10,"nodeType":"146","messageId":"147","endLine":137,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":147,"column":38,"nodeType":"169","messageId":"170","endLine":147,"endColumn":40},{"ruleId":"167","severity":1,"message":"168","line":151,"column":38,"nodeType":"169","messageId":"170","endLine":151,"endColumn":40},{"ruleId":"167","severity":1,"message":"168","line":155,"column":38,"nodeType":"169","messageId":"170","endLine":155,"endColumn":40},{"ruleId":"167","severity":1,"message":"168","line":165,"column":42,"nodeType":"169","messageId":"170","endLine":165,"endColumn":44},{"ruleId":"144","severity":1,"message":"171","line":196,"column":9,"nodeType":"146","messageId":"147","endLine":196,"endColumn":22},{"ruleId":"167","severity":1,"message":"172","line":223,"column":121,"nodeType":"169","messageId":"170","endLine":223,"endColumn":123},{"ruleId":"167","severity":1,"message":"172","line":225,"column":142,"nodeType":"169","messageId":"170","endLine":225,"endColumn":144},{"ruleId":"167","severity":1,"message":"172","line":243,"column":50,"nodeType":"169","messageId":"170","endLine":243,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":360,"column":13,"nodeType":"175","messageId":"170","endLine":367,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":414,"column":38,"nodeType":"169","messageId":"170","endLine":414,"endColumn":40},{"ruleId":"167","severity":1,"message":"172","line":414,"column":67,"nodeType":"169","messageId":"170","endLine":414,"endColumn":69},{"ruleId":"167","severity":1,"message":"168","line":414,"column":95,"nodeType":"169","messageId":"170","endLine":414,"endColumn":97},{"ruleId":"167","severity":1,"message":"168","line":427,"column":101,"nodeType":"169","messageId":"170","endLine":427,"endColumn":103},{"ruleId":"144","severity":1,"message":"176","line":6,"column":7,"nodeType":"146","messageId":"147","endLine":6,"endColumn":21},{"ruleId":"144","severity":1,"message":"177","line":16,"column":7,"nodeType":"146","messageId":"147","endLine":16,"endColumn":33},{"ruleId":"144","severity":1,"message":"178","line":22,"column":5,"nodeType":"146","messageId":"147","endLine":22,"endColumn":11},{"ruleId":"144","severity":1,"message":"179","line":30,"column":18,"nodeType":"146","messageId":"147","endLine":30,"endColumn":27},{"ruleId":"144","severity":1,"message":"180","line":31,"column":7,"nodeType":"146","messageId":"147","endLine":31,"endColumn":11},{"ruleId":"181","severity":1,"message":"182","line":37,"column":6,"nodeType":"183","endLine":37,"endColumn":8,"suggestions":"184"},{"ruleId":"167","severity":1,"message":"168","line":58,"column":44,"nodeType":"169","messageId":"170","endLine":58,"endColumn":46},{"ruleId":"144","severity":1,"message":"145","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":3,"column":5,"nodeType":"146","messageId":"187","endLine":3,"endColumn":10},{"ruleId":"185","severity":1,"message":"188","line":4,"column":5,"nodeType":"146","messageId":"187","endLine":4,"endColumn":10},{"ruleId":"185","severity":1,"message":"189","line":5,"column":5,"nodeType":"146","messageId":"187","endLine":5,"endColumn":10},{"ruleId":"185","severity":1,"message":"190","line":6,"column":5,"nodeType":"146","messageId":"187","endLine":6,"endColumn":10},{"ruleId":"185","severity":1,"message":"191","line":7,"column":5,"nodeType":"146","messageId":"187","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"192","line":8,"column":5,"nodeType":"146","messageId":"187","endLine":8,"endColumn":20},{"ruleId":"185","severity":1,"message":"193","line":9,"column":5,"nodeType":"146","messageId":"187","endLine":9,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":93,"column":40,"nodeType":"196","messageId":"197","endLine":93,"endColumn":41,"suggestions":"198"},{"ruleId":"194","severity":1,"message":"195","line":93,"column":65,"nodeType":"196","messageId":"197","endLine":93,"endColumn":66,"suggestions":"199"},{"ruleId":"194","severity":1,"message":"195","line":93,"column":74,"nodeType":"196","messageId":"197","endLine":93,"endColumn":75,"suggestions":"200"},{"ruleId":"194","severity":1,"message":"195","line":93,"column":78,"nodeType":"196","messageId":"197","endLine":93,"endColumn":79,"suggestions":"201"},{"ruleId":"144","severity":1,"message":"202","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"203","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"204","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"205","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":29},{"ruleId":"144","severity":1,"message":"206","line":2,"column":31,"nodeType":"146","messageId":"147","endLine":2,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":23,"column":45,"nodeType":"169","messageId":"170","endLine":23,"endColumn":47},{"ruleId":"167","severity":1,"message":"172","line":35,"column":35,"nodeType":"169","messageId":"170","endLine":35,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":50,"column":13,"nodeType":"169","messageId":"170","endLine":50,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":55,"column":13,"nodeType":"169","messageId":"170","endLine":55,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":61,"column":13,"nodeType":"169","messageId":"170","endLine":61,"endColumn":15},{"ruleId":"144","severity":1,"message":"207","line":76,"column":26,"nodeType":"146","messageId":"147","endLine":76,"endColumn":31},{"ruleId":"144","severity":1,"message":"208","line":6,"column":5,"nodeType":"146","messageId":"147","endLine":6,"endColumn":12},{"ruleId":"144","severity":1,"message":"209","line":7,"column":5,"nodeType":"146","messageId":"147","endLine":7,"endColumn":17},{"ruleId":"144","severity":1,"message":"210","line":9,"column":10,"nodeType":"146","messageId":"147","endLine":9,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":14,"column":3,"nodeType":"213","messageId":"214","endLine":16,"endColumn":4},{"ruleId":"167","severity":1,"message":"168","line":41,"column":42,"nodeType":"169","messageId":"170","endLine":41,"endColumn":44},{"ruleId":"215","severity":1,"message":"216","line":52,"column":9,"nodeType":"217","endLine":55,"endColumn":10},{"ruleId":"144","severity":1,"message":"204","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":22},{"ruleId":"144","severity":1,"message":"218","line":2,"column":63,"nodeType":"146","messageId":"147","endLine":2,"endColumn":71},{"ruleId":"144","severity":1,"message":"219","line":2,"column":73,"nodeType":"146","messageId":"147","endLine":2,"endColumn":80},{"ruleId":"144","severity":1,"message":"220","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":24},{"ruleId":"144","severity":1,"message":"221","line":10,"column":9,"nodeType":"146","messageId":"147","endLine":10,"endColumn":15},{"ruleId":"144","severity":1,"message":"222","line":23,"column":10,"nodeType":"146","messageId":"147","endLine":23,"endColumn":20},{"ruleId":"144","severity":1,"message":"223","line":23,"column":22,"nodeType":"146","messageId":"147","endLine":23,"endColumn":35},{"ruleId":"144","severity":1,"message":"224","line":24,"column":10,"nodeType":"146","messageId":"147","endLine":24,"endColumn":24},{"ruleId":"144","severity":1,"message":"225","line":24,"column":26,"nodeType":"146","messageId":"147","endLine":24,"endColumn":43},{"ruleId":"144","severity":1,"message":"226","line":29,"column":10,"nodeType":"146","messageId":"147","endLine":29,"endColumn":17},{"ruleId":"144","severity":1,"message":"227","line":29,"column":19,"nodeType":"146","messageId":"147","endLine":29,"endColumn":29},{"ruleId":"181","severity":1,"message":"228","line":45,"column":6,"nodeType":"183","endLine":45,"endColumn":10,"suggestions":"229"},{"ruleId":"167","severity":1,"message":"168","line":64,"column":62,"nodeType":"169","messageId":"170","endLine":64,"endColumn":64},{"ruleId":"167","severity":1,"message":"168","line":66,"column":44,"nodeType":"169","messageId":"170","endLine":66,"endColumn":46},{"ruleId":"167","severity":1,"message":"168","line":104,"column":16,"nodeType":"169","messageId":"170","endLine":104,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":118,"column":16,"nodeType":"169","messageId":"170","endLine":118,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":142,"column":17,"nodeType":"232","endLine":142,"endColumn":93},{"ruleId":"144","severity":1,"message":"145","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"148","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"166","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'FormExample' is defined but never used.","no-native-reassign",["233"],"no-negated-in-lhs",["234"],"'Layout' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'validateFields' is defined but never used.","'FormProps' is defined but never used.","'tailLayout' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'callCustValidation' is assigned a value but never used.","'form' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onFeildChange' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-duplicate-case","Duplicate case label.","SwitchCase","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","'layout' is assigned a value but never used.","'setoption' is assigned a value but never used.","'main' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form' and 'mainField'. Either include them or remove the dependency array.","ArrayExpression",["235"],"no-use-before-define","'fName' was used before it was defined.","usedBeforeDefined","'mName' was used before it was defined.","'lName' was used before it was defined.","'email' was used before it was defined.","'fieldsArr' was used before it was defined.","'fieldsBirthDate' was used before it was defined.","'areasOfInterests' was used before it was defined.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["236","237"],["238","239"],["240","241"],["242","243"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.","'AutoComplete' is defined but never used.","'Button' is defined but never used.","'dates' is assigned a value but never used.","'timeout' is defined but never used.","'currentValue' is defined but never used.","'fetch' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Checkbox' is defined but never used.","'message' is defined but never used.","'SearchOutlined' is defined but never used.","'Option' is assigned a value but never used.","'searchText' is assigned a value but never used.","'setsearchText' is assigned a value but never used.","'searchedColumn' is assigned a value but never used.","'setsearchedColumn' is assigned a value but never used.","'initial' is assigned a value but never used.","'setinitial' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.initialData'. Either include it or remove the dependency array.",["244"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"messageId":"247","fix":"248","desc":"249"},{"messageId":"250","fix":"251","desc":"252"},{"messageId":"247","fix":"253","desc":"249"},{"messageId":"250","fix":"254","desc":"252"},{"messageId":"247","fix":"255","desc":"249"},{"messageId":"250","fix":"256","desc":"252"},{"messageId":"247","fix":"257","desc":"249"},{"messageId":"250","fix":"258","desc":"252"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [form, mainField]",{"range":"261","text":"262"},"removeEscape",{"range":"263","text":"264"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"265","text":"266"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"267","text":"264"},{"range":"268","text":"266"},{"range":"269","text":"264"},{"range":"270","text":"266"},{"range":"271","text":"264"},{"range":"272","text":"266"},"Update the dependencies array to be: [dd, props.initialData]",{"range":"273","text":"274"},[829,831],"[form, mainField]",[1908,1909],"",[1908,1908],"\\",[1933,1934],[1933,1933],[1942,1943],[1942,1942],[1946,1947],[1946,1946],[1420,1424],"[dd, props.initialData]"]