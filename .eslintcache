[{"/home/pranjal/work/packages/simplified-antd/src/index.js":"1","/home/pranjal/work/packages/simplified-antd/src/reportWebVitals.js":"2","/home/pranjal/work/packages/simplified-antd/src/App.js":"3","/home/pranjal/work/packages/simplified-antd/src/components/index.js":"4","/home/pranjal/work/packages/simplified-antd/src/components/form/index.js":"5","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/index.js":"6","/home/pranjal/work/packages/simplified-antd/src/components/birthDate/index.js":"7","/home/pranjal/work/packages/simplified-antd/src/components/searchInput/index.js":"8","/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/index.js":"9","/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/demo/index.js":"10","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/dynamicFieldFormItem.js":"11","/home/pranjal/work/packages/simplified-antd/src/examples/form/basicRegistrationForm.js":"12","/home/pranjal/work/packages/simplified-antd/src/examples/form/fields.js":"13","/home/pranjal/work/packages/simplified-antd/src/examples/tableWithForm/index.js":"14","/home/pranjal/work/packages/simplified-antd/src/examples/dynamicField/index.js":"15","/home/pranjal/work/packages/simplified-antd/src/examples/birthDate/index.js":"16"},{"size":478,"mtime":1609595413326,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1609595413326,"results":"19","hashOfConfig":"18"},{"size":448,"mtime":1609742682014,"results":"20","hashOfConfig":"18"},{"size":275,"mtime":1609733795316,"results":"21","hashOfConfig":"18"},{"size":13219,"mtime":1609739687273,"results":"22","hashOfConfig":"18"},{"size":5644,"mtime":1609739679545,"results":"23","hashOfConfig":"18"},{"size":5283,"mtime":1609597174360,"results":"24","hashOfConfig":"18"},{"size":1470,"mtime":1609595413326,"results":"25","hashOfConfig":"18"},{"size":7322,"mtime":1609610724712,"results":"26","hashOfConfig":"18"},{"size":1119,"mtime":1609610735011,"results":"27","hashOfConfig":"18"},{"size":9045,"mtime":1609738970366,"results":"28","hashOfConfig":"18"},{"size":1119,"mtime":1609742145378,"results":"29","hashOfConfig":"18"},{"size":4134,"mtime":1609739777639,"results":"30","hashOfConfig":"18"},{"size":1133,"mtime":1609742467680,"results":"31","hashOfConfig":"18"},{"size":1863,"mtime":1609742354207,"results":"32","hashOfConfig":"18"},{"size":526,"mtime":1609742752500,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"q2bqho",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pranjal/work/packages/simplified-antd/src/index.js",[],["78","79"],"/home/pranjal/work/packages/simplified-antd/src/reportWebVitals.js",[],"/home/pranjal/work/packages/simplified-antd/src/App.js",["80","81","82","83","84"],"/home/pranjal/work/packages/simplified-antd/src/components/index.js",[],"/home/pranjal/work/packages/simplified-antd/src/components/form/index.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"import React, { useState } from 'react';\nimport { Layout, Menu, Breadcrumb, Divider } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Checkbox, Row, Col, Upload, Radio, Select, DatePicker } from 'antd';\nimport validateFields, { FormProps } from 'antd/lib/form'\nimport DynamicFieldSet from '../dynamicField';\nimport BirthDateComp from '../birthDate';\nimport moment from 'moment';\n\n// import { gutter, calculateSpan } from '../commonImports/responsiveSettings';\n// import PhoneInput from 'react-phone-input-2'\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'YYYY/MM/DD';\n\n// direction - optional \n// columns - optional\n\n\nconst tailLayout = {\n  wrapperCol: { offset: 20, span: 4 },\n};\n\n\nconst onFinish = (values, props) => {\n  // console.log('Success:', values);\n  if (props.setFormValues && props.handleSubmit) {\n\n    props.setFormValues(values)\n    props.handleSubmit(values)\n  }\n};\n\nconst onFinishFailed = (errorInfo, props) => {\n  console.log('Failed:', errorInfo);\n  if (props.handleError) {\n    props.handleError(errorInfo)\n  }\n};\n\n// const fields = [\n//   {\n//     type:'input',\n//     label: 'Username',\n//     name:'username',\n//     required:true,\n//     message:'Please input username',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'input',\n//     label: 'Email',\n//     name:'userEmail',\n//     required:true,\n//     message:'Please input email',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'password',\n//     label: 'Password',\n//     name:'password',\n//     required:true,\n//     message:'Please input password',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'input',\n//     label: 'Username',\n//     name:'username',\n//     required:false,\n//     message:'Please input username',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'upload',\n//     label: 'Photo Upload',\n//     name:'userPhoto',\n//     required:true,\n//     message:'Please input email',\n//     custValidation:[{\n\n//     }]\n//   },\n//   {\n//     type:'checkbox',\n//     label: 'Remember Me',\n//     name:'remember',\n//     required:false,\n//     message:'Please input password',\n//     custValidation:[{\n\n//     }]\n//   }\n// ]\n\n// const initialValues = {\n//   password:'password',\n//   userEmail:'abc@gmail.com',\n//   remember:true\n// }\n\nconst callCustValidation = (form) => {\n  form.validateFields()\n    .then((values) => {\n      console.log(values)\n    })\n    .catch((errorInfo) => {\n      console.log(errorInfo)\n      /*\n      errorInfo:\n        {\n          values: {\n            username: 'username',\n            password: 'password',\n          },\n          errorFields: [\n            { password: ['username'], errors: ['Please input your Password!'] },\n          ],\n          outOfDate: false,\n        }\n      */\n    });\n}\n\n\n\nconst CustomForm = (props) => {\n  const [form] = Form.useForm();\n\n  const [uploadList, setuploadList] = useState(props.photoArr ? props.photoArr : [])\n  const [uploadListPicture, setuploadListPicture] = useState(props.photoArr ? props.photoArr : [])\n\n\n\n  // validateFields(props)\n  let span = 24;\n  // console.log(form)\n  if (props.columns && props.columns == 2) {\n    span = 12\n  }\n\n  if (props.columns && props.columns == 3) {\n    span = 8\n  }\n\n  if (props.columns && props.columns == 4) {\n    span = 6\n  }\n\n\n  let layout = props.layout ? props.layout : {\n    labelCol: { span: 24 },\n    wrapperCol: { span: 24 },\n  };\n\n  if (props.direction && props.direction == 'HORIZONTAL') {\n    layout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 18 },\n    };\n  }\n\n  const uploadButton = (\n    <div>\n      {/* {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />} */}\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  );\n\n\n  const uploadButtonPicture = (a) => (\n    <Button disabled={a}>\n      <UploadOutlined /> Upload\n    </Button>\n  )\n\n  const handleUploadChange = (file) => {\n    // console.log(file)\n    setuploadList(file.fileList)\n  }\n\n  const handleUploadChangePicture = (file) => {\n    // console.log(file)\n    setuploadListPicture(file.fileList)\n  }\n\n  const onFeildChange = (val, type) => {\n    // console.log('props.....',props)\n    if (props.onChangeMob) {\n      props.onChangeMob(val, type)\n    }\n  }\n\n  const renderElement=(p)=>{\n    let style = { width: '100%' }\n    if (p.width) {\n      style.width = p.width\n    }\n    let elemType = p.type;\n    let elem = <Input disabled={props.disabled ? props.disabled : false} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n    if (p.prefix) {\n      elem = <Input disabled={props.disabled ? props.disabled : false} addonBefore={p.prefix} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n    }\n\n\n    switch (elemType) {\n      case 'checkbox':\n        elem = (\n          p.values ? (<Checkbox.Group>\n          { p.values.map((m) => {\n            return (\n              <Checkbox value={m}>{m}</Checkbox>\n            )\n          }) \n          }\n\n        </Checkbox.Group>)\n        :\n\n        <Checkbox value={p.name}>{p.option != undefined ? p.option : p.label}</Checkbox>\n        )\n        break;\n\n      case 'password':\n        elem = (<Input.Password placeholder={p.name} />)\n        break;\n\n      case 'mobile':\n        elem = (\n          // <PhoneInput country={'in'} placeholder={p.placeholder} onChange={(val, type) => onFeildChange(val, type)} />\n          <Input placeholder={p.name}/>\n        )\n        break;\n\n      case 'upload':\n        elem = (\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            className=\"avatar-uploader\"\n            defaultFileList={uploadList}\n            // showUploadList={false}\n            // beforeUpload={beforeUpload}\n            onChange={handleUploadChange}\n          >\n            {uploadList.length >= (p.limit ? p.limit : 0) ? null : uploadButton}\n          </Upload>\n        )\n        break;\n\n      case 'upload-picture':\n        elem = (\n          <Upload\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            name=\"avatar\"\n            listType=\"picture\"\n            className=\"avatar-uploader\"\n            // showUploadList={false}\n            defaultFileList={uploadListPicture}\n            //  fileList={uploadList}\n            // beforeUpload={beforeUpload}\n            onChange={handleUploadChangePicture}\n          >\n            {uploadListPicture.length >= (p.limit ? p.limit : 0) ? uploadButtonPicture(true) : uploadButtonPicture(false)}\n          </Upload>\n        )\n        break;\n\n      case 'radio':\n        elem = (<Radio.Group>\n          {p.values &&\n            p.values.map((o) => {\n              return (\n                <Radio value={o.toUpperCase()}>{o}</Radio>\n              )\n            })\n          }\n        </Radio.Group>)\n        break;\n\n      case 'select':\n        elem = (\n          <Select\n            style={{ width: p.width ? p.width : '100%' }}>\n            {p.values &&\n              p.values.map((o) => {\n                // console.log(typeof o)\n                return (\n                  <Option value={o.toUpperCase()}>{o}</Option>\n                )\n              })\n            }\n          </Select>)\n        break;\n\n      case 'multiselect':\n        elem = (\n          <Select\n            mode=\"multiple\"\n            placeholder={p.label}\n            style={{ width: p.width ? p.width : '100%' }}>\n            {p.values &&\n              p.values.map((o) => {\n                return(\n                  <Option value={o.value} key={o.value}>{o.label}</Option>\n                )\n              })\n            }\n          </Select>)\n        break;\n\n      // case 'multi':\n      //   elem = (\n      //     <DynamicFieldSet field={p} />)\n      //   break;\n\n      case 'datepicker':\n        elem = (\n          <DatePicker onChange={(date, val) => {\n            if (props.onChange) {\n              props.onChange(date, val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n      case 'daterangepicker':\n        elem = (\n          <RangePicker onChange={(date, val) => {\n            if (props.onChange) {\n              props.onChange(date, val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n\n      case 'datepicker':\n        elem = (\n          <DatePicker onChange={(val) => {\n            if (props.onChange) {\n              props.onChange(val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n\n      case 'inputGroup':\n        elem = (\n          <DatePicker onChange={(val) => {\n            if (props.onChange) {\n              props.onChange(val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n      case 'textarea':\n        elem = (\n          <Input.TextArea placeholder={p.placeholder ? p.placeholder : p.name} />)\n        break;\n\n      case 'birthDate':\n        elem = (\n          <BirthDateComp\n          fieldName={p.name}\n          date={props.form ? props.form.getFieldValue(p.name) : ''}\n          onChange={(val) => {\n            if(props.form){\n              props.form.setFieldsValue({\n                [p.name]: moment(val).format('YYYY-MM-DD')\n              })\n            }\n          }} />)\n        break;\n\n        case 'dynamicFieldSet':\n          elem=(\n            <DynamicFieldSet field={[p]}/>\n          )\n      default:\n    }\n    return elem\n  }\n\n  return (\n    //   <Form\n    //     {...layout}\n    //     name=\"basic\"\n    //     initialValues={props.initialValues}\n    //     onFinish={(values)=>{\n    //       onFinish(values,props)}}\n    //     onFinishFailed={(errorInfo)=>{\n    //       onFinishFailed(errorInfo, props)}}\n    // >\n    <>\n      <Row gutter={32}>\n        {/* <div style={{display:'flex',flexDirection:'column', flexWrap:'wrap', justifyContent:'space-between'}}> */}\n        {props.fields && props.fields.map((p) => {\n          // console.log('phjgjh',p)\n        let elem = renderElement(p)\n\n          return (\n            <>\n              <Col span={span}\n              // xs={calculateSpan(span, 'xs')} \n              // sm={calculateSpan(span, 'sm')} \n              // md={calculateSpan(span, 'md')} \n              // lg={calculateSpan(span, 'lg')} \n              // xl={calculateSpan(span, 'xl')} \n              // xxl={calculateSpan(span, 'xxl')}\n              >\n                <Form.Item\n                  colon={false}\n                  labelAlign=\"right\"\n                  {...layout}\n                  label={p.showlabel == undefined || (p.showlabel != undefined && p.showlabel == true) ? p.label : null}\n                  name={p.name}\n                  // valuePropName={'checked'}\n                  rules={\n                    [\n                      {\n                        required: p.required,\n                        message: p.message ? p.message : p.placeholder ? `please input ${p.placeholder}` : ''\n                      },\n                      ({ getFieldValue }) => ({\n                        validator: (rule, value) => {\n                          if (value) {\n                            // console.log('p.custValidation && p.custValidation[0]',p.custValidation && p.custValidation[0])\n                            if (p.custValidation && p.custValidation[0] && p.custValidation[0].type == 'regx') {\n                              if (!value.match(p.custValidation[0].validator)) {\n                                return Promise.reject(`${p.custValidation[0].message}`);\n                              }\n                            }\n                          }\n                          return Promise.resolve();\n                          // console.log('value')\n                        }\n                      })\n                      // ({ getFieldValue }) => ({\n                      //   validator(rule, value ,cb) {\n                      //     // console.log(rule,value,cb)\n                      //     return Promise.resolve();\n                      //     // if (!value || getFieldValue('password') === value) {\n                      //     //   return Promise.resolve();\n                      //     // }\n\n                      //     // return Promise.reject('The two passwords that you entered do not match!');\n                      //   },\n                      // }),\n                    ]}\n                >\n                  {elem}\n                </Form.Item>\n              </Col>\n              {p.divider &&\n\n                <Divider />\n              }\n            </>\n          )\n\n        })}\n      </Row>\n      {/* </div> */}\n\n      {props.render ? props.render() : null}\n\n      {/* <Form.Item {...tailLayout} style={{textAlign:'right'}}>\n          <Button type=\"primary\" \n          htmlType=\"submit\"\n          // onClick={()=>{\n            //   callCustValidation(form)\n            // }}\n            >\n            {props.buttonName ? props.buttonName : 'Save'}\n            </Button>\n          </Form.Item> */}\n      {/* </Form> */}\n    </>\n  )\n}\n\nexport default CustomForm","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/index.js",["112","113","114","115","116","117","118","119","120","121","122"],"\nimport React, { useState, useEffect } from 'react'\nimport { Form, Input, Button, Row, Col, Select, InputNumber } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport DynamicFieldFormItem from './dynamicFieldFormItem'\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\nlet layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\n\nconst DynamicFieldSet = (props) => {\n  const [form] = Form.useForm()\n  let mainField = props.field && props.field[0] ? props.field[0] : null;\n  const [option, setoption] = useState(null)\n \n  useEffect(() => {\n    form.setFieldsValue({\n      response:mainField.initialValue\n    })\n  }, []);\n\n  return (\n    <Form.List name={mainField.name}>\n    {(fields, { add, remove ,move}) => {\n    \n      return (\n        <div>\n          {fields.map((field, index) => (\n         \n            <div key={field.key} style={{display:'flex', justifyContent:'center', alignItems:'center',alignContent:'center'}}>\n              {\n                mainField.fields.map((f)=>{\n                  return(\n                    // <Form.Item\n                    //   {...formItemLayout}\n                    //   labelAlign={'left'}\n                    //   style={{ flex: 1, margin:'5px 1px' }}\n                    //   label={index === 0 ? f.label : ''}\n                    //   name={[field.name, f.name]}\n                    //   fieldKey={[field.fieldKey, f.name]}\n                    //   rules={[{ required: f.required, message: f.message }]}\n                    // >\n                    // <InputNumber style={{ width:'100%' }} placeholder={f.placeholder} />\n                    // </Form.Item>\n                    <DynamicFieldFormItem\n                    fieldKey={[field.fieldKey, f.name]}\n                    f={f}\n                    index={index}\n                    name={[field.name, f.name]}\n                    />\n                  )\n                })\n              }\n\n              <MinusCircleOutlined\n              style={{margin:'10px'}}\n                  className=\"dynamic-delete-button\"\n                  onClick={() => {\n                    remove(field.name);\n                  }}\n                />\n            </div>\n            // <Row key={field.key} gutter={14}>\n            //   <Col span={12}>\n            //     <Form.Item\n            //       name={[field.name, \"response\"]}\n            //       fieldKey={[field.fieldKey, \"response\"]}\n            //       // initialValue={mainField.initialValue[index].response}\n            //       // initialValue={[field.initialValue,\"response\"]}\n            //       rules={rules}\n            //     >\n            //       {mainField.values ?\n            //       option != null && option == 'between' ? \n                  \n            //       <Input.Group compact>\n            //       <Form.Item\n            //         name={[field.name, 'response','from']}\n            //         noStyle\n            //         rules={[{ required: true, message: 'From value is required' }]}\n            //       >\n            //        <InputNumber style={{ width: '50%' }} placeholder=\"From\" />\n            //       </Form.Item>\n            //       <Form.Item\n            //         name={[field.name, 'response','to']}\n            //         noStyle\n            //         rules={[{ required: true, message: 'To value is required' }]}\n            //       >\n            //        <InputNumber style={{ width: '50%' }} placeholder=\"To\" />\n            //       </Form.Item>\n            //     </Input.Group>\n            //       :\n            //       <InputNumber placeholder=\"Response\" style={{width:'100%'}}/>\n            //       :\n            //       <Input placeholder=\"Response\" />\n            //       }\n            //     </Form.Item>\n            //   </Col>\n            //   <Col span={10}>\n            //     <Form.Item\n            //       name={[field.name, \"summary\"]}\n            //       fieldKey={[field.fieldKey, \"summary\"]}\n            //       // initialValue={[field.initialValue,\"summary\"]}\n            //       rules={rules}\n            //     >\n            //       {mainField.values ?\n            //        <Select \n            //        onChange={(val)=>{\n            //         //  setoption(val)\n            //        }}\n            //        style={{ width:'100%'}}>\n            //        {mainField.values.map((o)=>{\n            //          return(\n            //            <Select.Option value={o.value}>{o.title}</Select.Option>\n            //          )\n            //        })\n            //        }\n            //      </Select>:\n            //       <Input placeholder=\"summary\" />\n            //      }\n            //     </Form.Item>\n            //   </Col>\n            //   <Col flex=\"none\" span={2}>\n            //     <MinusCircleOutlined\n            //       className=\"dynamic-delete-button\"\n            //       onClick={() => {\n            //         remove(field.name);\n            //       }}\n            //     />\n            //   </Col>\n            // </Row>\n          ))}\n          <Form.Item>\n            <Button\n              type=\"dashed\"\n              onClick={() => {\n                add();\n              }}\n              style={{ width: \"100%\" }}\n            >\n              <PlusOutlined /> Add field\n            </Button>\n          </Form.Item>\n        </div>\n      );\n    }}\n  </Form.List>\n   \n  );\n};\nexport default DynamicFieldSet","/home/pranjal/work/packages/simplified-antd/src/components/birthDate/index.js",["123","124","125","126","127","128","129","130","131","132","133"],"import React, { useState, useEffect } from 'react';\nimport { Input, AutoComplete, Button } from 'antd';\nimport SearchInputComp from '../searchInput';\nimport moment from 'moment'\n\n\n  class BirthDateComp extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        years: [],\n        months: moment.monthsShort(),\n        dates: [],\n        selecetdYear:null,\n        selectedDate:null,\n        selectedMonth:null,\n        initial:false,\n        value:null\n      }\n    }\n\n    static getDerivedStateFromProps(props, state){\n      if(props.date != null && state.initial==false){\n        return{\n          value:props.date,\n          initial:true,\n          selecetdYear: moment(props.date).year(),\n          selectedDate: moment(props.date).format('DD'),\n          selectedMonth:moment(props.date).format('MMM')\n        }\n      }\n    }\n\n    componentDidMount(){\n      let moddate= this.props.date!=undefined && this.props.date!=null && this.props.date.split('-')\n      let yearData = [];\n      for(let i = 0;i<100;i++){\n        yearData.push(moment().subtract(i,'years').year())\n      }\n      this.setState({\n        years:yearData,\n        selecetdYear:moddate[0],\n        selectedMonth:moddate[1],\n        selectedDate:moddate[2]\n      })\n    }\n\n    \n   onChangeVal=(type,val)=>{\n    if(type == 'month'){\n      this.setState({\n        selectedMonth:val,\n      })\n    }\n    if(type == 'year'){\n      this.setState({\n        selecetdYear:val\n      })\n    }\n\n    if(type == 'day'){\n      this.setState({\n        selectedDate:val\n      })\n      // ,()=>{\n      //   // let m=this.props.form.getFieldValue(this.props.fieldName)\n      //   // this.props.form.setFieldsValue({\n      //     this.props.getBirthDate( `${selecetdYear?selecetdYear:moddate[0]}-${moment(selecetdYear?selecetdYear:moddate[0]).month(selectedMonth ? selectedMonth:moddate[1]).format(\"MM\")}-${val ? val:moddate[2]}`)\n      //   // })\n      // })\n    }\n  }\n\n\nrender(){\n  const { years, months, dates, selecetdYear, selectedMonth,selectedDate } = this.state;\n\n  let value = null;\n  if(selecetdYear != null && selectedMonth != null && selectedDate != null){\n    value = selecetdYear+'-'+selectedMonth+'-'+selectedDate;\n  }\n\n  if(value != null){\n    value = moment(value);\n  }\n \n \n  let date = null;\n  let month = null;\n  let year = null;\n\n  if(value != null){\n    date = value.date()\n  }\n\n  if(value != null){\n    month = value.format('MMM')\n  }\n\n  if(value != null){\n    year = value.year()\n  }\n\n\n  let dateArr = [];\n  if(selecetdYear != null && selectedMonth != null){\n    let monthNum = moment(selecetdYear).month(selectedMonth).format(\"MM\");\n    let numDate = moment(`${selecetdYear}-${monthNum}`, \"YYYY-MM\").daysInMonth();\n    for(let i = 1;i<numDate+1;i++){\n\n      let a = i<10?'0'+i : `${i}`;\n      dateArr.push(a)\n    }\n  }\n\n  if(selecetdYear != null && selectedMonth != null && selectedDate != null){\n      if(this.props.onChange){\n        // console.log('selecetdYear',selecetdYear,selectedMonth,selectedDate)\n\n        this.props.onChange(moment(`${selecetdYear}-${moment(selecetdYear).month(selectedMonth).format(\"MM\")}-${selectedDate}`))\n      }\n  }\n\n  return (\n    <div style={{display:'flex',flexDirection:'row', width:'100%'}}>\n        <SearchInputComp value={year} type=\"year\" placeholder=\"YYYY\" data={years} onChangeVal={this.onChangeVal} style={{flex:1}}/>\n        <SearchInputComp value={month} type=\"month\" placeholder=\"MM\" data={months} onChangeVal={this.onChangeVal} style={{flex:1}}/>\n        <SearchInputComp value={date} type=\"day\" placeholder=\"DD\" data={dateArr} onChangeVal={this.onChangeVal} style={{flex:1}}/>\n    </div>\n  );\n};\n  }\n\nexport default BirthDateComp\n\n// const BirthDateComp = () => {\n\n//   const [years, setyears] = useState([])\n//   const [months, setmonths] = useState(moment.monthsShort())\n//   const [dates, setdates] = useState([])\n//   const [selectedDate, setselectedDate] = useState(null)\n//   const [selectedMonth, setselectedMonth] = useState(null)\n//   const [selecetdYear, setselecetdYear] = useState(null)\n  \n//   useEffect(() => {\n//     let yearData = [];\n//     for(let i = 0;i<100;i++){\n//       yearData.push(moment().subtract(i,'years').year())\n//     }\n//     setyears(yearData)\n//   },[]);\n\n\n//   useEffect(() => {\n//     let dateArr = []\n//    if(selecetdYear != null && selectedMonth != null){\n//      let monthNum = moment(selecetdYear).month(selectedMonth).format(\"M\");\n//      let numDate = moment(`${selecetdYear}-${monthNum}`, \"YYYY-MM\").daysInMonth()\n//      for(let i = 1;i<numDate+1;i++){\n//       dateArr.push(i)\n//      }\n//      console.log(dateArr)\n//     //  setdates(dateArr)\n//    }\n//   })\n\n\n//   const onChangeVal=(type,val)=>{\n//     if(type == 'month'){\n//       setselectedMonth(val)\n//     }\n//     if(type == 'year'){\n//       setselecetdYear(val)\n//     }\n//   }\n\n//   return (\n//     <div style={{display:'flex',flexDirection:'row'}}>\n//         <SearchInputComp type=\"year\" placeholder=\"yyyy\" data={years} onChangeVal={onChangeVal}/>\n//         <SearchInputComp type=\"month\" placeholder=\"Month\" data={months} onChangeVal={onChangeVal}/>\n//         <SearchInputComp type=\"day\" placeholder=\"dd\" data={dates} onChangeVal={onChangeVal}/>\n//     </div>\n//   );\n// };\n\n// export default BirthDateComp","/home/pranjal/work/packages/simplified-antd/src/components/searchInput/index.js",["134","135","136","137","138","139"],"import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nlet timeout;\nlet currentValue;\n\nfunction fetch(value, callback) {\n \n}\n\nclass SearchInputComp extends React.Component {\n  constructor(props){\n    super(props)\n  }\n  state = {\n    data: [],\n    value: undefined,\n  };\n\n  handleSearch = value => {\n    // if (value) {\n    //   fetch(value, data => this.setState({ data }));\n    //   this.props.SearchPatientWithName(value)\n    // } else {\n    //   this.setState({ data: [] });\n    // }\n  };\n\n  handleChange = value => {\n    this.setState({ value });\n    this.props.onChangeVal(this.props.type,value)\n  };\n\n  render() {\n// console.log(this.props.data)\n    const options = (this.props.data ? this.props.data : []).map(d => <Option key={d} value={d}>{d}</Option>);\n    return (\n      <Select\n        disabled={this.props.data.length == 0}\n        showSearch\n        value={this.props.value != null ? this.props.value : this.state.value}\n        placeholder={this.props.placeholder}\n        style={this.props.style}\n        defaultActiveFirstOption={false}\n        showArrow={false}\n        filterOption={false}\n        onSearch={this.handleSearch}\n        onChange={this.handleChange}\n        notFoundContent={null}\n        filterOption={(input, option) =>{\n         return option.key.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        }\n      >\n        {options}\n      </Select>\n    );\n  }\n}\n\nexport default SearchInputComp;","/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/index.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160"],"import React, { useState, useEffect } from 'react';\nimport { Table, Input, Button, Modal, Form, Row, Col, Upload, Checkbox, message, Select, Popconfirm } from 'antd';\n// import Highlighter from 'react-highlight-words';\nimport { SearchOutlined, PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport CustomForm from '../form';\n// import { layout } from '../commonImports/import1';\nimport moment from 'moment';\n\n\nconst { Option } = Select;\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\n\nconst TableWithForm = (props) => {\n  const [searchText, setsearchText] = useState('')\n  const [searchedColumn, setsearchedColumn] = useState('')\n  const [visible, setvisible] = useState(false)\n  const [data, setdata] = useState([])\n  const [previewVisible, setpreviewVisible] = useState(false)\n  const [previewImage, setpreviewImage] = useState({})\n  const [selectedItem, setselectedItem] = useState(null);\n  const [custForm] = Form.useForm();\n\n\n  let dd = props.initialData ? props.initialData.length : 0;\n\n  useEffect(() => {\n    if (props.initialData) {\n      let arr = props.initialData.map((item, i) => {\n        item.key = i\n        return item\n      })\n      setdata(arr);\n    }\n    // setinitial(props.dynamicData.length)\n\n  }, [dd])\n\n\n\n  const imagePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setpreviewImage(file.url || file.preview)\n    setpreviewVisible(true)\n  };\n\n\n\n  const onFinish = (values) => {\n    let arr = [...data];\n    values.key = data.length;\n\n    if (props.checkDuplicateItem && props.checkDuplicateItem == true && props.uniqueId) {\n      let uniqueId = props.uniqueId;\n      let flag = arr.find((a)=>a[uniqueId] == values[uniqueId]);\n\n      if(flag){\n        props.onError('DUPLICATE_ENTRY_EXCEPTION')\n      }else{\n        if(selectedItem == null){\n          addItem(values)\n        }else{\n          editItem(values)\n        }\n      }\n    } else {\n      if(selectedItem == null){\n        addItem(values)\n      }else{\n        editItem(values)\n      }\n    }\n  }\n\n  const addItem=(item)=>{\n    let arr = [...data];\n    arr.push({ ...item })\n      custForm.resetFields()\n      setvisible(false);\n      setdata(arr)\n      if(props.onChange){\n        props.onChange(arr)\n      }\n  }\n\n\n  const deleteItem = (index) => {\n    let arr = [...data];\n    arr.splice(index, 1)\n    setdata(arr)\n    setvisible(false);\n    if(props.onChange){\n      props.onChange(arr)\n    }\n  }\n\n\n  const editItem = (item) => {\n    let arr = [...data];\n    let index = arr.find((a)=>a.key == item.key)\n    if(index != -1){\n      arr.splice(index, 1, item)\n      setdata(arr)\n      setvisible(false);\n      if(props.onChange){\n        props.onChange(arr)\n      }\n    }\n    setselectedItem(null)\n    custForm.resetFields()\n  }\n\n  let a = []\n  let columns = props.fields.map((p) => {\n\n    if (p.type == \"datepicker\") {\n      return {\n        title: p.label,\n        dataIndex: p.name,\n        key: p.name,\n        // width: 150,\n        render: (text) => {\n          var dateString = moment(text).format(\"DD-MM-YYYY\");\n          return (\n            <span>{dateString}</span>\n          )\n        }\n      }\n    }\n    if (p.type == \"upload\") {\n\n      return {\n        title: p.label,\n        dataIndex: p.name,\n        key: p.name,\n        // width: 150,\n        render: (text) => {\n\n          return (\n            <>\n              <Upload\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                className='docmentView'\n                listType=\"picture-card\"\n                defaultFileList={text && text.bucket ? [text] : text.fileList}\n                onPreview={imagePreview}\n                onRemove={() => {\n                  return false\n                }}\n              />\n              <Modal visible={previewVisible} footer={null} onCancel={() => {\n                setpreviewVisible(false)\n              }}>\n                <img alt=\"inside page image\" style={{ width: '100%' }} src={previewImage} />\n              </Modal>\n            </>\n          )\n        }\n      }\n    }\n    return {\n      title: p.label,\n      dataIndex: p.name,\n      key: p.name,\n      // width: 150,\n      render:(text,record)=>{\n        return(\n          <p style={{marginBottom:'0px'}}>{text ? text : '-'}</p>\n        )\n      }\n      // ...this.getColumnSearchProps(p.name),\n    }\n  })\n\n\n  if(props.showEditAction){\n    a.push(\n      {\n        title: 'Edit',\n        dataIndex: 'edit',\n        render: (text, record) => (\n            <Button \n            onClick={()=>{\n              setselectedItem(record)\n              setvisible(true)\n              custForm.setFieldsValue({...record})\n            }}><EditOutlined />\n          </Button>\n       ),\n      }\n    )\n  };\n\n\n  if(props.showDeleteAction){\n    a.push(\n      {\n        title: 'Delete',\n        dataIndex: 'delete',\n        render: (text, record) => (\n          <Popconfirm placement=\"topLeft\" title={'Are you sure ?'} onConfirm={()=>{\n            deleteItem(record.key)\n          }} okText=\"Yes\" cancelText=\"No\">\n            <Button ><DeleteOutlined />\n          </Button>\n        </Popconfirm>\n       ),\n      }\n    )\n  };\n\n  const renderForm=()=>{\n    return(\n      <Form\n      form={custForm}\n      // {...layout}\n      // initialValues={selectedItem != null ? {...selectedItem} : {}}\n      onFinish={(values) => {\n        onFinish(values)\n      }}\n      onFinishFailed={(errorInfo) => {\n        console.log(errorInfo)\n      }}>\n      <CustomForm\n        columns={props.formColumns ? props.formColumns : 3}\n        fields={props.fields}\n      />\n      <Button\n        type=\"primary\"\n        htmlType=\"submit\"\n        style={{ marginRight: 10 }}\n      >\n        Save\n      </Button>\n      <Button\n        onClick={() => {\n          setvisible(false)\n        }}\n      >\n        Cancel\n        </Button>\n\n    </Form>\n    )\n  }\n\n\n  let colarr = [...columns, ...a]\n  return (\n    <>\n      <Row style={{marginBottom:'20px'}}>\n        {props.formAlign && props.formAlign == 'INLINE' ? \n        <Col span={24}>\n        { renderForm()}\n        </Col>\n        \n        :\n        <Col span={6} offset={18} style={{ textAlign: 'right', marginBottom: 10 }}>\n          <Button \n          type=\"primary\"\n          onClick={() => {\n            setvisible(true)\n          }}>\n            <PlusOutlined />\n            Add\n            </Button>\n        </Col>\n        }\n      </Row>\n\n      <Table columns={colarr} dataSource={data} size=\"small\" />\n      {!props.formAlign || props.formAlign =='MODAL' && \n      <Modal\n        title=\"Add Details\"\n        destroyOnClose\n        visible={visible}\n        onOk={() => {\n          setvisible(false)\n          setselectedItem(null)\n          custForm.resetFields()\n        }}\n        onCancel={() => {\n          // ========= DEBUG - on cancel form values are not resetting \n          setvisible(false)\n          setselectedItem(null)\n          custForm.resetFields()\n        }}\n        width={'80%'}\n        footer={false}\n      >\n       {renderForm()}\n      </Modal>\n}\n      \n    </>\n  )\n\n}\n\nexport default TableWithForm","/home/pranjal/work/packages/simplified-antd/src/components/tableWithForm/demo/index.js",["161","162","163"],"import React, { Component, Fragment, useState } from \"react\";\nimport TableWithForm from '../index';\nimport * as fields from '../../form/demo/fields';\nimport { Form } from 'antd';\n\nconst TableWithFormDemo=()=>{\n  const [form] = Form.useForm();\n  const [data, setdata] = useState([{fName:'abc',lName:'ab',emailId:'abc'}]);\n\n    return(\n        <div style={{width:'100%',margin:'auto', padding:'20px',marginTop:'40px'}}>\n          <h2>Table with Form</h2>\n          <TableWithForm\n            fields={[...fields.fName, ...fields.mName, ...fields.lName, ...fields.email]}\n            formColumns={4}\n            checkDuplicateItem={true}\n            uniqueId={'emailId'} // == this should be name of unique field being used in data \n            initialData={data}\n            onChange={(data) => {\n              setdata(data)\n            }}\n            onError={(err)=>{\n              console.log(err)\n            }}\n            formAlign=\"MODAL\" // ---- 'MODAL' || 'INLINE'\n            showDeleteAction={true}\n            showEditAction={true}\n        />\n        </div>\n\n        \n    )\n}\n\nexport default TableWithFormDemo;","/home/pranjal/work/packages/simplified-antd/src/components/dynamicField/dynamicFieldFormItem.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useState } from 'react';\nimport { Layout, Menu, Breadcrumb, Divider } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Form, Input, Button, Checkbox, Row, Col, Upload, Radio, Select, DatePicker } from 'antd';\nimport validateFields, { FormProps } from 'antd/lib/form'\nimport DynamicFieldSet from '../dynamicField';\nimport BirthDateComp from '../birthDate';\nimport moment from 'moment';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'YYYY/MM/DD';\n\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n  },\n};\nconst DynamicFieldFormItem = (props) => {\n  const [form] = Form.useForm();\n\n  const [uploadList, setuploadList] = useState(props.photoArr ? props.photoArr : [])\n  const [uploadListPicture, setuploadListPicture] = useState(props.photoArr ? props.photoArr : [])\n\n  let span = 24;\n\n  if (props.columns && props.columns == 2) {\n    span = 12\n  }\n\n  if (props.columns && props.columns == 3) {\n    span = 8\n  }\n\n  if (props.columns && props.columns == 4) {\n    span = 6\n  }\n\n\n  let layout = props.layout ? props.layout : {\n    labelCol: { span: 24 },\n    wrapperCol: { span: 24 },\n  };\n\n  if (props.direction && props.direction == 'HORIZONTAL') {\n    layout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 18 },\n    };\n  }\n\n  const uploadButton = (\n    <div>\n      {/* {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />} */}\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  );\n\n\n  const uploadButtonPicture = (a) => (\n    <Button disabled={a}>\n      <UploadOutlined /> Upload\n    </Button>\n  )\n\n  const handleUploadChange = (file) => {\n    // console.log(file)\n    setuploadList(file.fileList)\n  }\n\n  const handleUploadChangePicture = (file) => {\n    // console.log(file)\n    setuploadListPicture(file.fileList)\n  }\n\n  const onFeildChange = (val, type) => {\n    // console.log('props.....',props)\n    if (props.onChangeMob) {\n      props.onChangeMob(val, type)\n    }\n  }\n\n  const renderElement=(p)=>{\n    let style = { width: '100%' }\n    if (p.width) {\n      style.width = p.width\n    }\n    let elemType = p.type;\n    let elem = <Input disabled={props.disabled ? props.disabled : false} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n    if (p.prefix) {\n      elem = <Input disabled={props.disabled ? props.disabled : false} addonBefore={p.prefix} style={style} placeholder={p.placeholder != undefined ? p.placeholder : p.name} />;\n    }\n\n\n    switch (elemType) {\n      case 'checkbox':\n        elem = (\n          p.values ? (<Checkbox.Group>\n          { p.values.map((m) => {\n            return (\n              <Checkbox value={m}>{m}</Checkbox>\n            )\n          }) \n          }\n\n        </Checkbox.Group>)\n        :\n\n        <Checkbox value={p.name}>{p.option != undefined ? p.option : p.label}</Checkbox>\n        )\n        break;\n\n      case 'password':\n        elem = (<Input.Password placeholder={p.name} />)\n        break;\n\n      case 'mobile':\n        elem = (\n          // <PhoneInput country={'in'} placeholder={p.placeholder} onChange={(val, type) => onFeildChange(val, type)} />\n          <Input placeholder={p.name}/>\n        )\n        break;\n\n      case 'upload':\n        elem = (\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            className=\"avatar-uploader\"\n            defaultFileList={uploadList}\n            // showUploadList={false}\n            // beforeUpload={beforeUpload}\n            onChange={handleUploadChange}\n          >\n            {uploadList.length >= (p.limit ? p.limit : 0) ? null : uploadButton}\n          </Upload>\n        )\n        break;\n\n      case 'upload-picture':\n        elem = (\n          <Upload\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            name=\"avatar\"\n            listType=\"picture\"\n            className=\"avatar-uploader\"\n            // showUploadList={false}\n            defaultFileList={uploadListPicture}\n            //  fileList={uploadList}\n            // beforeUpload={beforeUpload}\n            onChange={handleUploadChangePicture}\n          >\n            {uploadListPicture.length >= (p.limit ? p.limit : 0) ? uploadButtonPicture(true) : uploadButtonPicture(false)}\n          </Upload>\n        )\n        break;\n\n      case 'radio':\n        elem = (<Radio.Group>\n          {p.values &&\n            p.values.map((o) => {\n              return (\n                <Radio value={o.toUpperCase()}>{o}</Radio>\n              )\n            })\n          }\n        </Radio.Group>)\n        break;\n\n      case 'select':\n        elem = (\n          <Select\n            style={{ width: p.width ? p.width : '100%' }}>\n            {p.values &&\n              p.values.map((o) => {\n                // console.log(typeof o)\n                return (\n                  <Option value={o.toUpperCase()}>{o}</Option>\n                )\n              })\n            }\n          </Select>)\n        break;\n\n      case 'multiselect':\n        elem = (\n          <Select\n            mode=\"multiple\"\n            placeholder={p.label}\n            style={{ width: p.width ? p.width : '100%' }}>\n            {p.values &&\n              p.values.map((o) => {\n                return(\n                  <Option value={o.value} key={o.value}>{o.label}</Option>\n                )\n              })\n            }\n          </Select>)\n        break;\n\n      case 'multi':\n        elem = (\n          <DynamicFieldSet field={p} />)\n        break;\n\n      case 'datepicker':\n        elem = (\n          <DatePicker onChange={(date, val) => {\n            if (props.onChange) {\n              props.onChange(date, val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n      case 'daterangepicker':\n        elem = (\n          <RangePicker onChange={(date, val) => {\n            if (props.onChange) {\n              props.onChange(date, val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n\n      case 'datepicker':\n        elem = (\n          <DatePicker onChange={(val) => {\n            if (props.onChange) {\n              props.onChange(val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n\n      case 'inputGroup':\n        elem = (\n          <DatePicker onChange={(val) => {\n            if (props.onChange) {\n              props.onChange(val)\n            }\n          }} format={dateFormat} style={{ width: '100%' }} />)\n        break;\n\n      case 'textarea':\n        elem = (\n          <Input.TextArea placeholder={p.placeholder ? p.placeholder : p.name} />)\n        break;\n\n      case 'birthDate':\n        elem = (\n          <BirthDateComp\n          fieldName={p.name}\n          date={props.form ? props.form.getFieldValue(p.name) : ''}\n          onChange={(val) => {\n            if(props.form){\n              props.form.setFieldsValue({\n                [p.name]: moment(val).format('YYYY-MM-DD')\n              })\n            }\n          }} />)\n        break;\n      default:\n    }\n    return elem\n  }\n\n  let p = props.f;\n\n  let { name, index, fieldKey } = props;\n\n\n  return (\n\n    <>\n \n                <Form.Item\n                    {...formItemLayout}\n                      labelAlign={'left'}\n                      style={{ flex: 1, margin:'5px 1px' }}\n                      label={index === 0 ? p.label : ''}\n                      name={name}\n                      fieldKey={fieldKey}\n                      // rules={[{ required: p.required, message: p.message }]}\n                      rules={\n                        [\n                          {\n                            required: p.required,\n                            message: p.message ? p.message : p.placeholder ? `please input ${p.placeholder}` : ''\n                          },\n                          ({ getFieldValue }) => ({\n                            validator: (rule, value) => {\n                              if (value) {\n                                // console.log('p.custValidation && p.custValidation[0]',p.custValidation && p.custValidation[0])\n                                if (p.custValidation && p.custValidation[0] && p.custValidation[0].type == 'regx') {\n                                  if (!value.match(p.custValidation[0].validator)) {\n                                    return Promise.reject(`${p.custValidation[0].message}`);\n                                  }\n                                }\n                              }\n                              return Promise.resolve();\n                              // console.log('value')\n                            }\n                          })\n                        ]}\n                >\n                 {renderElement(p)}\n                </Form.Item>\n\n    </>\n  )\n}\n\nexport default DynamicFieldFormItem","/home/pranjal/work/packages/simplified-antd/src/examples/form/basicRegistrationForm.js",["188"],"import React, { Component } from 'react';\nimport CustomForm from '../../components/form';\nimport * as fields from './fields';\nimport { Button, Form, Card } from 'antd'\n\nconst BasicRegistrationForm=()=>{\n    const [form] = Form.useForm();\n    return(\n        <Card>\n            <Form\n            form={form}\n            //usual initial values for form \n            initialValues={{rememberMe:['Remember Me']}}\n            onFinish={(values) => {\n                //get values on form submit\n                console.log(values)\n            }}\n            onFinishFailed={(errorInfo) => {\n                //error log on failed submission\n                console.log(errorInfo)\n            }}\n            >\n                <h2>User Registration</h2>\n                {/* fields props is an array of objects */}\n                <CustomForm\n                    form={form}\n                    columns={2}\n                    fields={fields.fieldsArr}\n                />\n                <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n            </Form>\n        </Card>\n    )\n}\n\nexport default BasicRegistrationForm;","/home/pranjal/work/packages/simplified-antd/src/examples/form/fields.js",["189","190","191","192","193","194","195","196","197","198","199"],"\nexport { \n    fName,\n    mName,\n    lName,\n    email,\n    fieldsArr,\n    fieldsBirthDate,\n    areasOfInterests\n}\nconst genderValues = ['MALE', 'FEMALE', 'OTHER'];\n\n\nlet documents = [\n  {\n      type: 'dynamicFieldSet',\n      label: 'Document',\n      name: 'documents',\n      showlabel: true,\n      fields:[{\n          type: 'input',\n          label: 'Name',\n          name: 'name',\n          required: true,\n          placeholder: 'Name',\n          message: 'Please input name',\n          custValidation: [{\n            validator: \"^[a-zA-Z ]+$\",\n            message: 'Please enter valid name',\n            type: 'regx',\n          }]\n        },\n        {\n          type: 'upload-picture',\n          label: 'Upload',\n          name: 'upload',\n          required: true,\n          limit:1,\n          message: 'Please upload document'\n        }]\n  }]\n\n\nconst areasOfInterests = [{\n  type: 'multiselect',\n  label: 'Areas of Interest',\n  name: 'areasOfInterest',\n  required: false,\n  message: 'Please upload photo',\n  values:[{label: 'Politics', value:'politics'}, { label: 'Science & Technology' , value: 'scienceAndTechnology'}]\n}]\n\n\nconst uploadPhoto1 = [{\n  type: 'upload',\n  label: 'Photo',\n  name: 'photo',\n  required: false,\n  limit:2,\n  message: 'Please upload photo'\n}]\n\n\nconst uploadPhoto = [{\n  type: 'upload-picture',\n  label: 'Photo',\n  name: 'photo',\n  placeholder: 'Photo',\n  required: false,\n  limit:1,\n  message: 'Please upload photo'\n}];\n\nconst fName = [{\n    type: 'input',\n    label: 'First Name',\n    name: 'fName',\n    required: true,\n    placeholder: 'First Name',\n    message: 'Please input first name',\n    custValidation: [{\n      validator: \"^[a-zA-Z ]+$\",\n      message: 'Please enter valid name',\n      type: 'regx',\n    }]\n  }]\n  \n  const mName = [{\n    type: 'input',\n    label: 'Middle Name',\n    name: 'mName',\n    required: false,\n    placeholder: 'Middle Name',\n    message: 'Please input middle name',\n    custValidation: [{\n      validator: \"^[a-zA-Z ]+$\",\n      message: 'Please enter valid name',\n      type: 'regx',\n    }]\n  }]\n  \n  const lName = [{\n    type: 'input',\n    label: 'Last Name',\n    name: 'lName',\n    required: true,\n    placeholder: 'Last Name',\n    message: 'Please input last name',\n    custValidation: [{\n      validator: \"^[a-zA-Z ]+$\",\n      message: 'Please enter valid name',\n      type: 'regx',\n    }]\n  }]\n\n  const email = [{\n    type: 'input',\n    label: \"Email Id\",\n    name: 'emailId',\n    placeholder: 'Email Id',\n    required: true,\n    message: 'Please input email-id',\n    custValidation: [{\n      validator: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: 'Please enter valid Email address',\n      type: 'regx',\n    }]\n  }]\n\n  const gender = [\n    {\n      type: 'radio',\n      label: 'Gender',\n      name: 'gender',\n      required: false,\n      message: 'Please select gender',\n      values: genderValues,\n    }]\n\n    const rememberMe = [\n      {\n          type:'checkbox',\n          label: 'Remember Me',\n          name:'rememberMe',\n          required:false,\n          showlabel:false,\n          message:'Please input ',\n          values:['Remember Me'],\n          custValidation:[{\n            \n          }]\n        }\n    ]\n\n    const fieldsBirthDate = [\n      {\n        type: 'birthDate',\n        label: 'Birth Date',\n        name: 'birthDate',\n        required: false,\n        message: 'Please input date of birth',\n        custValidation: [{\n    \n        }]\n      }]\n\n      const password = [{\n        type: 'password',\n        label: 'Password',\n        name: 'password',\n        required: true,\n        placeholder: 'Password',\n        message: 'Please input Password',\n        // custValidation: [{\n        //   validator: \"^[a-zA-Z0-9]+$\",\n        //   message: 'Please enter valid password',\n        //   type: 'regx',\n        // }]\n      }]\n  const fieldsArr = [ ...uploadPhoto,...uploadPhoto1,  ...fName, ...mName, ...lName, ...email, ...gender, ...fieldsBirthDate, ...areasOfInterests, ...password, ...documents, ...rememberMe];\n","/home/pranjal/work/packages/simplified-antd/src/examples/tableWithForm/index.js",["200","201","202"],"import React, { Component, Fragment, useState } from \"react\";\nimport TableWithForm from '../../components/tableWithForm';\nimport * as fields from '../form/fields';\nimport { Form } from 'antd';\n\nconst TableWithFormDemo=()=>{\n  const [form] = Form.useForm();\n  const [data, setdata] = useState([{fName:'abc',lName:'ab',emailId:'abc'}]);\n\n    return(\n        <div style={{width:'100%',margin:'auto', padding:'20px',marginTop:'40px'}}>\n          <h2>Table with Form</h2>\n          <TableWithForm\n            fields={[...fields.fName, ...fields.mName, ...fields.lName, ...fields.email]}\n            formColumns={4}\n            checkDuplicateItem={true}\n            uniqueId={'emailId'} // == this should be name of unique field being used in data \n            initialData={data}\n            onChange={(data) => {\n              setdata(data)\n            }}\n            onError={(err)=>{\n              console.log(err)\n            }}\n            formAlign=\"MODAL\" // ---- 'MODAL' || 'INLINE'\n            showDeleteAction={true}\n            showEditAction={true}\n        />\n        </div>\n\n        \n    )\n}\n\nexport default TableWithFormDemo;","/home/pranjal/work/packages/simplified-antd/src/examples/dynamicField/index.js",["203","204","205","206"],"import React, { Component, Fragment, useState } from \"react\";\nimport DynamicFieldSet from '../../components/dynamicField';\nimport { Button, Form } from 'antd';\n\nconst DynamicFieldsDemo=()=>{\n  const [form] = Form.useForm();\n  const [data, setdata] = useState([{fName:'abc',lName:'ab',emailId:'abc'}]);\n\n  let demoField = [\n    {\n        type: 'multi',\n        label: 'Response',\n        name: 'responseCapture',\n        showlabel: true,\n        fields:[{\n            type: 'input',\n            label: 'Name',\n            name: 'name',\n            required: true,\n            placeholder: 'Name',\n            message: 'Please input name',\n            custValidation: [{\n              validator: \"^[a-zA-Z ]+$\",\n              message: 'Please enter valid name',\n              type: 'regx',\n            }]\n          },\n          {\n            type: 'multiselect',\n            label: 'Areas of Interest',\n            name: 'areasOfInterest',\n            required: false,\n            message: 'Please upload photo',\n            values:[{label: 'Politics', value:'politics'}, { label: 'Science & Technology' , value: 'scienceAndTechnology'}]\n          }]\n    }]\n\n\n    return(\n        <Form\n            form={form}\n            //----------usual initial values for form \n            initialValues={{rememberMe:['Remember Me']}}\n            onFinish={(values) => {\n                //-----------get values on form submit\n                console.log(values)\n            }}\n            onFinishFailed={(errorInfo) => {\n                //-----------error log on failed submission\n                console.log(errorInfo)\n            }}\n        >\n            <DynamicFieldSet\n                    field={demoField}\n            />\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n            \n        </Form>\n\n        \n    )\n}\n\nexport default DynamicFieldsDemo;","/home/pranjal/work/packages/simplified-antd/src/examples/birthDate/index.js",["207","208","209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":1,"column":18,"nodeType":"216","messageId":"217","endLine":1,"endColumn":27},{"ruleId":"214","severity":1,"message":"218","line":1,"column":29,"nodeType":"216","messageId":"217","endLine":1,"endColumn":37},{"ruleId":"214","severity":1,"message":"219","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"214","severity":1,"message":"220","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":25},{"ruleId":"214","severity":1,"message":"221","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":30},{"ruleId":"214","severity":1,"message":"222","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"223","line":2,"column":18,"nodeType":"216","messageId":"217","endLine":2,"endColumn":22},{"ruleId":"214","severity":1,"message":"224","line":2,"column":24,"nodeType":"216","messageId":"217","endLine":2,"endColumn":34},{"ruleId":"214","severity":1,"message":"225","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":22},{"ruleId":"214","severity":1,"message":"226","line":3,"column":24,"nodeType":"216","messageId":"217","endLine":3,"endColumn":38},{"ruleId":"214","severity":1,"message":"227","line":3,"column":40,"nodeType":"216","messageId":"217","endLine":3,"endColumn":60},{"ruleId":"214","severity":1,"message":"228","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":22},{"ruleId":"214","severity":1,"message":"229","line":5,"column":26,"nodeType":"216","messageId":"217","endLine":5,"endColumn":35},{"ruleId":"214","severity":1,"message":"230","line":21,"column":7,"nodeType":"216","messageId":"217","endLine":21,"endColumn":17},{"ruleId":"214","severity":1,"message":"231","line":26,"column":7,"nodeType":"216","messageId":"217","endLine":26,"endColumn":15},{"ruleId":"214","severity":1,"message":"232","line":35,"column":7,"nodeType":"216","messageId":"217","endLine":35,"endColumn":21},{"ruleId":"214","severity":1,"message":"233","line":111,"column":7,"nodeType":"216","messageId":"217","endLine":111,"endColumn":25},{"ruleId":"214","severity":1,"message":"234","line":137,"column":10,"nodeType":"216","messageId":"217","endLine":137,"endColumn":14},{"ruleId":"235","severity":1,"message":"236","line":147,"column":38,"nodeType":"237","messageId":"238","endLine":147,"endColumn":40},{"ruleId":"235","severity":1,"message":"236","line":151,"column":38,"nodeType":"237","messageId":"238","endLine":151,"endColumn":40},{"ruleId":"235","severity":1,"message":"236","line":155,"column":38,"nodeType":"237","messageId":"238","endLine":155,"endColumn":40},{"ruleId":"235","severity":1,"message":"236","line":165,"column":42,"nodeType":"237","messageId":"238","endLine":165,"endColumn":44},{"ruleId":"214","severity":1,"message":"239","line":196,"column":9,"nodeType":"216","messageId":"217","endLine":196,"endColumn":22},{"ruleId":"235","severity":1,"message":"240","line":209,"column":115,"nodeType":"237","messageId":"238","endLine":209,"endColumn":117},{"ruleId":"235","severity":1,"message":"240","line":211,"column":136,"nodeType":"237","messageId":"238","endLine":211,"endColumn":138},{"ruleId":"235","severity":1,"message":"240","line":229,"column":44,"nodeType":"237","messageId":"238","endLine":229,"endColumn":46},{"ruleId":"241","severity":1,"message":"242","line":346,"column":7,"nodeType":"243","messageId":"238","endLine":353,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":388,"column":7,"nodeType":"243","messageId":"246","endLine":388,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":424,"column":38,"nodeType":"237","messageId":"238","endLine":424,"endColumn":40},{"ruleId":"235","severity":1,"message":"240","line":424,"column":67,"nodeType":"237","messageId":"238","endLine":424,"endColumn":69},{"ruleId":"235","severity":1,"message":"236","line":424,"column":95,"nodeType":"237","messageId":"238","endLine":424,"endColumn":97},{"ruleId":"235","severity":1,"message":"236","line":437,"column":101,"nodeType":"237","messageId":"238","endLine":437,"endColumn":103},{"ruleId":"214","severity":1,"message":"247","line":3,"column":16,"nodeType":"216","messageId":"217","endLine":3,"endColumn":21},{"ruleId":"214","severity":1,"message":"248","line":3,"column":31,"nodeType":"216","messageId":"217","endLine":3,"endColumn":34},{"ruleId":"214","severity":1,"message":"249","line":3,"column":36,"nodeType":"216","messageId":"217","endLine":3,"endColumn":39},{"ruleId":"214","severity":1,"message":"250","line":3,"column":41,"nodeType":"216","messageId":"217","endLine":3,"endColumn":47},{"ruleId":"214","severity":1,"message":"251","line":3,"column":49,"nodeType":"216","messageId":"217","endLine":3,"endColumn":60},{"ruleId":"214","severity":1,"message":"252","line":7,"column":7,"nodeType":"216","messageId":"217","endLine":7,"endColumn":21},{"ruleId":"214","severity":1,"message":"253","line":17,"column":7,"nodeType":"216","messageId":"217","endLine":17,"endColumn":33},{"ruleId":"214","severity":1,"message":"254","line":23,"column":5,"nodeType":"216","messageId":"217","endLine":23,"endColumn":11},{"ruleId":"214","severity":1,"message":"255","line":31,"column":10,"nodeType":"216","messageId":"217","endLine":31,"endColumn":16},{"ruleId":"214","severity":1,"message":"256","line":31,"column":18,"nodeType":"216","messageId":"217","endLine":31,"endColumn":27},{"ruleId":"257","severity":1,"message":"258","line":37,"column":6,"nodeType":"259","endLine":37,"endColumn":8,"suggestions":"260"},{"ruleId":"214","severity":1,"message":"261","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"262","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"247","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":15},{"ruleId":"214","severity":1,"message":"263","line":2,"column":17,"nodeType":"216","messageId":"217","endLine":2,"endColumn":29},{"ruleId":"214","severity":1,"message":"264","line":2,"column":31,"nodeType":"216","messageId":"217","endLine":2,"endColumn":37},{"ruleId":"235","severity":1,"message":"236","line":23,"column":45,"nodeType":"237","messageId":"238","endLine":23,"endColumn":47},{"ruleId":"235","severity":1,"message":"240","line":35,"column":35,"nodeType":"237","messageId":"238","endLine":35,"endColumn":37},{"ruleId":"235","severity":1,"message":"236","line":50,"column":13,"nodeType":"237","messageId":"238","endLine":50,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":55,"column":13,"nodeType":"237","messageId":"238","endLine":55,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":61,"column":13,"nodeType":"237","messageId":"238","endLine":61,"endColumn":15},{"ruleId":"214","severity":1,"message":"265","line":76,"column":26,"nodeType":"216","messageId":"217","endLine":76,"endColumn":31},{"ruleId":"214","severity":1,"message":"266","line":6,"column":5,"nodeType":"216","messageId":"217","endLine":6,"endColumn":12},{"ruleId":"214","severity":1,"message":"267","line":7,"column":5,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"268","line":9,"column":10,"nodeType":"216","messageId":"217","endLine":9,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":14,"column":3,"nodeType":"271","messageId":"272","endLine":16,"endColumn":4},{"ruleId":"235","severity":1,"message":"236","line":41,"column":42,"nodeType":"237","messageId":"238","endLine":41,"endColumn":44},{"ruleId":"273","severity":1,"message":"274","line":52,"column":9,"nodeType":"275","endLine":55,"endColumn":10},{"ruleId":"214","severity":1,"message":"247","line":2,"column":17,"nodeType":"216","messageId":"217","endLine":2,"endColumn":22},{"ruleId":"214","severity":1,"message":"276","line":2,"column":63,"nodeType":"216","messageId":"217","endLine":2,"endColumn":71},{"ruleId":"214","severity":1,"message":"277","line":2,"column":73,"nodeType":"216","messageId":"217","endLine":2,"endColumn":80},{"ruleId":"214","severity":1,"message":"278","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":24},{"ruleId":"214","severity":1,"message":"279","line":10,"column":9,"nodeType":"216","messageId":"217","endLine":10,"endColumn":15},{"ruleId":"214","severity":1,"message":"280","line":23,"column":10,"nodeType":"216","messageId":"217","endLine":23,"endColumn":20},{"ruleId":"214","severity":1,"message":"281","line":23,"column":22,"nodeType":"216","messageId":"217","endLine":23,"endColumn":35},{"ruleId":"214","severity":1,"message":"282","line":24,"column":10,"nodeType":"216","messageId":"217","endLine":24,"endColumn":24},{"ruleId":"214","severity":1,"message":"283","line":24,"column":26,"nodeType":"216","messageId":"217","endLine":24,"endColumn":43},{"ruleId":"257","severity":1,"message":"284","line":45,"column":6,"nodeType":"259","endLine":45,"endColumn":10,"suggestions":"285"},{"ruleId":"235","severity":1,"message":"236","line":64,"column":62,"nodeType":"237","messageId":"238","endLine":64,"endColumn":64},{"ruleId":"235","severity":1,"message":"236","line":66,"column":44,"nodeType":"237","messageId":"238","endLine":66,"endColumn":46},{"ruleId":"235","severity":1,"message":"236","line":111,"column":37,"nodeType":"237","messageId":"238","endLine":111,"endColumn":39},{"ruleId":"235","severity":1,"message":"240","line":112,"column":14,"nodeType":"237","messageId":"238","endLine":112,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":127,"column":16,"nodeType":"237","messageId":"238","endLine":127,"endColumn":18},{"ruleId":"235","severity":1,"message":"236","line":141,"column":16,"nodeType":"237","messageId":"238","endLine":141,"endColumn":18},{"ruleId":"286","severity":1,"message":"287","line":165,"column":17,"nodeType":"288","endLine":165,"endColumn":93},{"ruleId":"235","severity":1,"message":"236","line":263,"column":45,"nodeType":"237","messageId":"238","endLine":263,"endColumn":47},{"ruleId":"289","severity":1,"message":"290","line":283,"column":25,"nodeType":"291","messageId":"292","endLine":283,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":283,"column":44,"nodeType":"237","messageId":"238","endLine":283,"endColumn":46},{"ruleId":"289","severity":1,"message":"290","line":283,"column":54,"nodeType":"291","messageId":"292","endLine":283,"endColumn":56},{"ruleId":"214","severity":1,"message":"215","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"218","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"234","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"222","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"223","line":2,"column":18,"nodeType":"216","messageId":"217","endLine":2,"endColumn":22},{"ruleId":"214","severity":1,"message":"224","line":2,"column":24,"nodeType":"216","messageId":"217","endLine":2,"endColumn":34},{"ruleId":"214","severity":1,"message":"293","line":2,"column":36,"nodeType":"216","messageId":"217","endLine":2,"endColumn":43},{"ruleId":"214","severity":1,"message":"225","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":22},{"ruleId":"214","severity":1,"message":"226","line":3,"column":24,"nodeType":"216","messageId":"217","endLine":3,"endColumn":38},{"ruleId":"214","severity":1,"message":"227","line":3,"column":40,"nodeType":"216","messageId":"217","endLine":3,"endColumn":60},{"ruleId":"214","severity":1,"message":"248","line":4,"column":41,"nodeType":"216","messageId":"217","endLine":4,"endColumn":44},{"ruleId":"214","severity":1,"message":"249","line":4,"column":46,"nodeType":"216","messageId":"217","endLine":4,"endColumn":49},{"ruleId":"214","severity":1,"message":"228","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":22},{"ruleId":"214","severity":1,"message":"229","line":5,"column":26,"nodeType":"216","messageId":"217","endLine":5,"endColumn":35},{"ruleId":"214","severity":1,"message":"234","line":26,"column":10,"nodeType":"216","messageId":"217","endLine":26,"endColumn":14},{"ruleId":"235","severity":1,"message":"236","line":33,"column":38,"nodeType":"237","messageId":"238","endLine":33,"endColumn":40},{"ruleId":"235","severity":1,"message":"236","line":37,"column":38,"nodeType":"237","messageId":"238","endLine":37,"endColumn":40},{"ruleId":"235","severity":1,"message":"236","line":41,"column":38,"nodeType":"237","messageId":"238","endLine":41,"endColumn":40},{"ruleId":"214","severity":1,"message":"294","line":42,"column":5,"nodeType":"216","messageId":"217","endLine":42,"endColumn":9},{"ruleId":"235","severity":1,"message":"236","line":51,"column":42,"nodeType":"237","messageId":"238","endLine":51,"endColumn":44},{"ruleId":"214","severity":1,"message":"254","line":52,"column":5,"nodeType":"216","messageId":"217","endLine":52,"endColumn":11},{"ruleId":"214","severity":1,"message":"239","line":82,"column":9,"nodeType":"216","messageId":"217","endLine":82,"endColumn":22},{"ruleId":"235","severity":1,"message":"240","line":95,"column":115,"nodeType":"237","messageId":"238","endLine":95,"endColumn":117},{"ruleId":"235","severity":1,"message":"240","line":97,"column":136,"nodeType":"237","messageId":"238","endLine":97,"endColumn":138},{"ruleId":"235","severity":1,"message":"240","line":115,"column":44,"nodeType":"237","messageId":"238","endLine":115,"endColumn":46},{"ruleId":"241","severity":1,"message":"242","line":232,"column":7,"nodeType":"243","messageId":"238","endLine":239,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":301,"column":105,"nodeType":"237","messageId":"238","endLine":301,"endColumn":107},{"ruleId":"214","severity":1,"message":"215","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"295","severity":1,"message":"296","line":3,"column":5,"nodeType":"216","messageId":"297","endLine":3,"endColumn":10},{"ruleId":"295","severity":1,"message":"298","line":4,"column":5,"nodeType":"216","messageId":"297","endLine":4,"endColumn":10},{"ruleId":"295","severity":1,"message":"299","line":5,"column":5,"nodeType":"216","messageId":"297","endLine":5,"endColumn":10},{"ruleId":"295","severity":1,"message":"300","line":6,"column":5,"nodeType":"216","messageId":"297","endLine":6,"endColumn":10},{"ruleId":"295","severity":1,"message":"301","line":7,"column":5,"nodeType":"216","messageId":"297","endLine":7,"endColumn":14},{"ruleId":"295","severity":1,"message":"302","line":8,"column":5,"nodeType":"216","messageId":"297","endLine":8,"endColumn":20},{"ruleId":"295","severity":1,"message":"303","line":9,"column":5,"nodeType":"216","messageId":"297","endLine":9,"endColumn":21},{"ruleId":"304","severity":1,"message":"305","line":124,"column":40,"nodeType":"306","messageId":"307","endLine":124,"endColumn":41,"suggestions":"308"},{"ruleId":"304","severity":1,"message":"305","line":124,"column":65,"nodeType":"306","messageId":"307","endLine":124,"endColumn":66,"suggestions":"309"},{"ruleId":"304","severity":1,"message":"305","line":124,"column":74,"nodeType":"306","messageId":"307","endLine":124,"endColumn":75,"suggestions":"310"},{"ruleId":"304","severity":1,"message":"305","line":124,"column":78,"nodeType":"306","messageId":"307","endLine":124,"endColumn":79,"suggestions":"311"},{"ruleId":"214","severity":1,"message":"215","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"218","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"234","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"218","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"312","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":14},{"ruleId":"214","severity":1,"message":"313","line":7,"column":16,"nodeType":"216","messageId":"217","endLine":7,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"218","line":1,"column":28,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"261","line":1,"column":38,"nodeType":"216","messageId":"217","endLine":1,"endColumn":46},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'FormExample' is defined but never used.","'TableWithFormDemo' is defined but never used.","'DynamicFieldSetExample' is defined but never used.","'Layout' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'UserOutlined' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'validateFields' is defined but never used.","'FormProps' is defined but never used.","'tailLayout' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'callCustValidation' is assigned a value but never used.","'form' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onFeildChange' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-duplicate-case","Duplicate case label.","SwitchCase","no-fallthrough","Expected a 'break' statement before 'default'.","default","'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Select' is defined but never used.","'InputNumber' is defined but never used.","'formItemLayout' is assigned a value but never used.","'formItemLayoutWithOutLabel' is assigned a value but never used.","'layout' is assigned a value but never used.","'option' is assigned a value but never used.","'setoption' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form' and 'mainField.initialValue'. Either include them or remove the dependency array.","ArrayExpression",["316"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'AutoComplete' is defined but never used.","'Button' is defined but never used.","'dates' is assigned a value but never used.","'timeout' is defined but never used.","'currentValue' is defined but never used.","'fetch' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Checkbox' is defined but never used.","'message' is defined but never used.","'SearchOutlined' is defined but never used.","'Option' is assigned a value but never used.","'searchText' is assigned a value but never used.","'setsearchText' is assigned a value but never used.","'searchedColumn' is assigned a value but never used.","'setsearchedColumn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.initialData'. Either include it or remove the dependency array.",["317"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Divider' is defined but never used.","'span' is assigned a value but never used.","no-use-before-define","'fName' was used before it was defined.","usedBeforeDefined","'mName' was used before it was defined.","'lName' was used before it was defined.","'email' was used before it was defined.","'fieldsArr' was used before it was defined.","'fieldsBirthDate' was used before it was defined.","'areasOfInterests' was used before it was defined.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["318","319"],["320","321"],["322","323"],["324","325"],"'data' is assigned a value but never used.","'setdata' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"messageId":"330","fix":"331","desc":"332"},{"messageId":"333","fix":"334","desc":"335"},{"messageId":"330","fix":"336","desc":"332"},{"messageId":"333","fix":"337","desc":"335"},{"messageId":"330","fix":"338","desc":"332"},{"messageId":"333","fix":"339","desc":"335"},{"messageId":"330","fix":"340","desc":"332"},{"messageId":"333","fix":"341","desc":"335"},"Update the dependencies array to be: [form, mainField.initialValue]",{"range":"342","text":"343"},"Update the dependencies array to be: [dd, props.initialData]",{"range":"344","text":"345"},"removeEscape",{"range":"346","text":"347"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"348","text":"349"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"350","text":"347"},{"range":"351","text":"349"},{"range":"352","text":"347"},{"range":"353","text":"349"},{"range":"354","text":"347"},{"range":"355","text":"349"},[898,900],"[form, mainField.initialValue]",[1443,1447],"[dd, props.initialData]",[2597,2598],"",[2597,2597],"\\",[2622,2623],[2622,2622],[2631,2632],[2631,2631],[2635,2636],[2635,2635]]